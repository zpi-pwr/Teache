{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    query getMe2($id: ID!){\\n        me2 (id: $id){ \\n            id \\n            nickname \\n            conversations{ \\n                id \\n                name \\n                avatarUrl\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query getMe($nickname: String!){\\n        me (nickname: $nickname){ \\n            id \\n            nickname \\n            conversations{ \\n                id \\n                name \\n                avatarUrl\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation send($id_conv: ID!, $content: String!, $id_sender: ID!) {\\n        addMessage(id_conversation: $id_conv, content: $content, id_sender: $id_sender) {\\n            id\\n            content\\n        }\\n    }\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getConversation($activeConversation: ID!){\\n      conversation(id: $activeConversation){\\n        id\\n        name\\n        contributors {\\n          id\\n          nickname\\n        }\\n        ethWallet\\n        messages {\\n          id\\n          content\\n          sender{\\n            id\\n          }\\n          date\\n          tags\\n        }\\n      }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nexport var getConversationGql = gql(_templateObject());\nexport var SEND_MESSAGE_GQL = gql(_templateObject2());\nexport var GET_ME = gql(_templateObject3());\nexport var GET_ME2 = gql(_templateObject4());","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/queries/gql.js"],"names":["gql","getConversationGql","SEND_MESSAGE_GQL","GET_ME","GET_ME2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,cAAlB;AAEA,OAAO,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;AAuBP,OAAO,IAAME,gBAAgB,GAAGF,GAAH,oBAAtB;AAUP,OAAO,IAAMG,MAAM,GAAGH,GAAH,oBAAZ;AAcP,OAAO,IAAMI,OAAO,GAAGJ,GAAH,oBAAb","sourcesContent":["import {gql} from 'apollo-boost'\n\nexport const getConversationGql = gql`\n    query getConversation($activeConversation: ID!){\n      conversation(id: $activeConversation){\n        id\n        name\n        contributors {\n          id\n          nickname\n        }\n        ethWallet\n        messages {\n          id\n          content\n          sender{\n            id\n          }\n          date\n          tags\n        }\n      }\n    }\n`;\n\nexport const SEND_MESSAGE_GQL = gql`\n    mutation send($id_conv: ID!, $content: String!, $id_sender: ID!) {\n        addMessage(id_conversation: $id_conv, content: $content, id_sender: $id_sender) {\n            id\n            content\n        }\n    }\n\n`;\n\nexport const GET_ME = gql`\n    query getMe($nickname: String!){\n        me (nickname: $nickname){ \n            id \n            nickname \n            conversations{ \n                id \n                name \n                avatarUrl\n            }\n        }\n    }\n`;\n\nexport const GET_ME2 = gql`\n    query getMe2($id: ID!){\n        me2 (id: $id){ \n            id \n            nickname \n            conversations{ \n                id \n                name \n                avatarUrl\n            }\n        }\n    }\n`;"]},"metadata":{},"sourceType":"module"}