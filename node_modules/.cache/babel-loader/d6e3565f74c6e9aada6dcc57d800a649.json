{"ast":null,"code":"import _classCallCheck from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/TeacheCoin.js\";\nimport React, { Component } from \"react\";\nimport TeacheCoin from \"../tokens/TeacheCoin\";\nimport Web3 from \"web3\";\n\nvar AccountBalanceComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountBalanceComponent, _Component);\n\n  function AccountBalanceComponent() {\n    var _this;\n\n    _classCallCheck(this, AccountBalanceComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountBalanceComponent).call(this));\n    _this.isWeb3 = true;\n    _this.isWeb3Locked = false;\n    _this.state = {\n      balance: 0\n    };\n\n    _this.checkWeb3();\n\n    return _this;\n  }\n\n  _createClass(AccountBalanceComponent, [{\n    key: \"checkWeb3\",\n    value: function checkWeb3() {\n      var web3 = window.ethereum;\n      if (window.ethereum) if (typeof web3 !== 'undefined') {\n        this.web3Provider = web3.currentProvider;\n        console.log(this.web3Provider);\n        this.web3 = new Web3(web3.currentProvider);\n        this.token = web3.eth.contract(TeacheCoin.abi).at(TeacheCoin.address);\n        console.log(this.token);\n\n        if (web3.eth.coinbase === null) {\n          this.isWeb3Locked = true;\n        }\n      } else {\n        this.web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\n        this.isWeb3 = false;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.isWeb3) {\n        var account = this.web3.eth.coinbase;\n        console.log(this.token);\n        this.token.balanceOf(account, function (error, response) {\n          if (!error) {\n            var decimal = _this2.token.decimal;\n            var precision = '1e' + decimal;\n            var balance = response.c[0] / precision; // let name = this.token.name\n            // let symbol = this.token.symbol\n            // let icon = this.token.icon\n            // let abi = this.token.abi\n            // let address = this.token.address\n\n            balance = balance >= 0 ? balance : 0;\n            console.log(balance);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.isWeb3) {\n        return null;\n      }\n\n      if (this.isWeb3Locked) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"ACCOUNT BLOCKED\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Balance: \", this.state.balance);\n    }\n  }]);\n\n  return AccountBalanceComponent;\n}(Component);\n\nvar TokenTransferComponent =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TokenTransferComponent, _Component2);\n\n  function TokenTransferComponent() {\n    _classCallCheck(this, TokenTransferComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TokenTransferComponent).apply(this, arguments));\n  }\n\n  return TokenTransferComponent;\n}(Component);\n\nexport default AccountBalanceComponent;","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/TeacheCoin.js"],"names":["React","Component","TeacheCoin","Web3","AccountBalanceComponent","isWeb3","isWeb3Locked","state","balance","checkWeb3","web3","window","ethereum","web3Provider","currentProvider","console","log","token","eth","contract","abi","at","address","coinbase","providers","HttpProvider","account","balanceOf","error","response","decimal","precision","c","TokenTransferComponent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,uB;;;;;AACF,qCAAc;AAAA;;AAAA;;AACV;AAEA,UAAKC,MAAL,GAAc,IAAd;AACA,UAAKC,YAAL,GAAoB,KAApB;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;;AAIA,UAAKC,SAAL;;AAVU;AAWb;;;;gCAEW;AACR,UAAIC,IAAI,GAAGC,MAAM,CAACC,QAAlB;AAEA,UAAGD,MAAM,CAACC,QAAV,EAEA,IAAI,OAAOF,IAAP,KAAgB,WAApB,EAAiC;AAC7B,aAAKG,YAAL,GAAoBH,IAAI,CAACI,eAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,YAAjB;AACA,aAAKH,IAAL,GAAY,IAAIP,IAAJ,CAASO,IAAI,CAACI,eAAd,CAAZ;AAEA,aAAKG,KAAL,GAAaP,IAAI,CAACQ,GAAL,CAASC,QAAT,CAAkBjB,UAAU,CAACkB,GAA7B,EAAkCC,EAAlC,CAAqCnB,UAAU,CAACoB,OAAhD,CAAb;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;;AACA,YAAIP,IAAI,CAACQ,GAAL,CAASK,QAAT,KAAsB,IAA1B,EAAgC;AAC5B,eAAKjB,YAAL,GAAoB,IAApB;AACH;AACJ,OAVD,MAUO;AACH,aAAKI,IAAL,GAAY,IAAIP,IAAJ,CAAS,IAAIA,IAAI,CAACqB,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAZ;AACA,aAAKpB,MAAL,GAAc,KAAd;AACH;AACJ;;;wCAEmB;AAAA;;AAChB,UAAG,KAAKA,MAAR,EAAgB;AACZ,YAAIqB,OAAO,GAAG,KAAKhB,IAAL,CAAUQ,GAAV,CAAcK,QAA5B;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,aAAKA,KAAL,CAAWU,SAAX,CAAqBD,OAArB,EAA8B,UAACE,KAAD,EAAQC,QAAR,EAAqB;AAC/C,cAAG,CAACD,KAAJ,EAAW;AACP,gBAAIE,OAAO,GAAG,MAAI,CAACb,KAAL,CAAWa,OAAzB;AACA,gBAAIC,SAAS,GAAG,OAAOD,OAAvB;AACA,gBAAItB,OAAO,GAAGqB,QAAQ,CAACG,CAAT,CAAW,CAAX,IAAgBD,SAA9B,CAHO,CAIP;AACA;AACA;AACA;AACA;;AAEAvB,YAAAA,OAAO,GAAGA,OAAO,IAAI,CAAX,GAAeA,OAAf,GAAyB,CAAnC;AAEAO,YAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEH;AACJ,SAhBD;AAiBH;AACJ;;;6BAEQ;AACL,UAAG,CAAC,KAAKH,MAAT,EAAiB;AACb,eAAO,IAAP;AACH;;AAED,UAAG,KAAKC,YAAR,EAAsB;AAClB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ;AAGH;;AAED,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKC,KAAL,CAAWC,OAA1B,CADJ;AAGH;;;;EAzEiCP,S;;IA4EhCgC,sB;;;;;;;;;;;;EAA+BhC,S;;AAKrC,eAAeG,uBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TeacheCoin from \"../tokens/TeacheCoin\"\n\nimport Web3 from \"web3\";\n\nclass AccountBalanceComponent extends Component {\n    constructor() {\n        super()\n\n        this.isWeb3 = true;\n        this.isWeb3Locked = false;\n\n        this.state = {\n            balance: 0\n        }\n\n        this.checkWeb3()\n    }\n\n    checkWeb3() {\n        let web3 = window.ethereum;\n\n        if(window.ethereum)\n\n        if (typeof web3 !== 'undefined') {\n            this.web3Provider = web3.currentProvider\n            console.log(this.web3Provider)\n            this.web3 = new Web3(web3.currentProvider)\n\n            this.token = web3.eth.contract(TeacheCoin.abi).at(TeacheCoin.address)\n            console.log(this.token)\n            if (web3.eth.coinbase === null) {\n                this.isWeb3Locked = true;\n            }\n        } else {\n            this.web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\n            this.isWeb3 = false;\n        }\n    }\n\n    componentDidMount() {\n        if(this.isWeb3) {\n            let account = this.web3.eth.coinbase\n            console.log(this.token)\n            this.token.balanceOf(account, (error, response) => {\n                if(!error) {\n                    let decimal = this.token.decimal\n                    let precision = '1e' + decimal\n                    let balance = response.c[0] / precision\n                    // let name = this.token.name\n                    // let symbol = this.token.symbol\n                    // let icon = this.token.icon\n                    // let abi = this.token.abi\n                    // let address = this.token.address\n\n                    balance = balance >= 0 ? balance : 0\n\n                    console.log(balance)\n\n                }\n            })\n        }\n    }\n\n    render() {\n        if(!this.isWeb3) {\n            return null;\n        }\n\n        if(this.isWeb3Locked) {\n            return (\n                <div>ACCOUNT BLOCKED</div>\n            )\n        }\n\n        return (\n            <div>Balance: {this.state.balance}</div>\n        )\n    }\n}\n\nclass TokenTransferComponent extends Component {\n\n}\n\n\nexport default AccountBalanceComponent;"]},"metadata":{},"sourceType":"module"}