{"ast":null,"code":"import _objectSpread from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/MainPage.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    font-size: 1.5em;\\n    right: 1.5vw;\\n    top: 1.5vh;\\n    text-align: right;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 5%;\\n    left: 50%;\\n    width: 90%;\\n    height: 80%;\\n    transform: translate(-50%);\\n    display: grid;\\n    grid-gap: 4px;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport ChatGroup from './ChatGroup';\nimport bgPic from \"../assets/mntnFHD_compressed_cut.jpeg\";\nimport Message from './Message';\nimport { connect } from \"react-redux\";\nimport GroupsComponent from \"./GroupsComponent\";\nimport ChatComponent from \"./ChatComponent\";\nimport styled from 'styled-components';\nimport { DetailsComponent } from \"./DetailsComponent\";\nimport '../styles/mainPage.scss';\nimport { Messages } from \"../data/Messages\";\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport AdvertsComponent from \"./AdvertsComponent\";\nimport InstallMetamask from \"./Metamask\";\nimport UnlockMetamask from \"./Metamask\";\nimport TokenTransferForm from \"./TokenTransferForm\";\nimport TeacheCoin from \"../tokens/TeacheCoin\"; // const Page = styled.div`\n//     // width: 100%;\n//     // height: 910px;\n//     // background-image: url(${bgPic})\n//     `;\n\nvar Container = styled.div(_templateObject());\nvar styleOptCollapsed = {\n  gridTemplateColumns: '72px auto' // gridTemplateRows: '95%',\n\n};\nvar styleOptUnCollapsed = {\n  gridTemplateColumns: '72px auto 320px' // gridTemplateRows: '95%',\n\n};\nvar Balance = styled.div(_templateObject2());\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.closeDialogs = function () {\n      _this.setState({\n        modalDialogs: {\n          installMetamaskVisible: false,\n          unlockMetamaskVisible: false,\n          transferFormVisible: false\n        }\n      });\n    };\n\n    _this.handleTokenTransfer = function () {\n      var installMetamask = false;\n      var unlockMetamask = false;\n      var transferForm = false;\n\n      if (!_this.isWeb3) {\n        installMetamask = true;\n      } else if (_this.isWeb3Locked) {\n        unlockMetamask = true;\n      } else {\n        transferForm = true;\n      }\n\n      _this.setState({\n        modalDialogs: {\n          installMetamaskVisible: installMetamask,\n          unlockMetamaskVisible: unlockMetamask,\n          transferFormVisible: transferForm\n        }\n      });\n    };\n\n    _this.handleKeyPress = function (event) {\n      if (event.key === 'Enter') {\n        _this.handleSend();\n      }\n    };\n\n    _this.openMainItem = function () {\n      _this.setState({\n        mainItemActive: true,\n        activeConversation: null\n      });\n\n      console.log(\"Open Main Item\");\n    };\n\n    _this.groupChanged = function (id) {\n      console.log(\"group changed: \", id);\n\n      _this.setState({\n        activeConversation: id,\n        mainItemActive: false\n      });\n    };\n\n    _this.showDetails = function (id) {\n      console.log(id);\n    };\n\n    _this.findActive = function (conversation) {\n      var activeConversation = _this.state.activeConversation;\n      return conversation.id === activeConversation;\n    };\n\n    var _this$props = _this.props,\n        conversations = _this$props.conversations,\n        groups = _this$props.groups,\n        adverts = _this$props.adverts;\n    _this.state = {\n      inputMessage: '',\n      activeConversation: conversations[0].id,\n      conversations: conversations,\n      groups: groups,\n      mainItemActive: true,\n      width: 0,\n      isCollapsed: false,\n      userID: '5ca1c9a11c9d4400003e3590',\n      modalDialogs: {\n        installMetamaskVisible: true,\n        unlockMetamaskVisible: false,\n        transferFormVisible: false\n      }\n    };\n    _this.isWeb3 = false;\n    _this.isWeb3Locked = false;\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadBalance = _this.loadBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkWeb3Compatibility = _this.checkWeb3Compatibility.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"loadBalance\",\n    value: function loadBalance() {\n      var _this2 = this;\n\n      if (this.isWeb3) {\n        window.web3.eth.getCoinbase(function (error, coinbase) {\n          if (false) {\n            console.log(error);\n          } else {\n            var token = _this2.state.TeacheCoin.token;\n            token.balanceOf(coinbase, function (error, response) {\n              if (!error) {\n                var balance = response.c[0] / 10000;\n                balance = balance >= 0 ? balance : 0;\n\n                _this2.setState({\n                  TeacheCoin: _objectSpread({}, _this2.state.TeacheCoin, {\n                    balance: balance,\n                    symbol: TeacheCoin.symbol\n                  })\n                }, function () {\n                  console.log(_this2.state);\n                });\n              }\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"checkWeb3Compatibility\",\n    value: function checkWeb3Compatibility() {\n      var _this3 = this;\n\n      if (window.web3) {\n        this.isWeb3 = true;\n        window.web3.eth.getCoinbase(function (error, coinbase) {\n          if (error || coinbase === null) {\n            _this3.isWeb3Locked = true;\n          } else {\n            _this3.isWeb3Locked = false;\n\n            _this3.setState({\n              TeacheCoin: _objectSpread({}, _this3.state.TeacheCoin, {\n                account: coinbase,\n                token: window.web3.eth.contract(TeacheCoin.abi).at(TeacheCoin.address)\n              })\n            }, function () {\n              _this3.loadBalance();\n            });\n          }\n        });\n      } else {\n        this.isWeb3 = false;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      window.addEventListener('load', this.checkWeb3Compatibility);\n\n      if (window.web3) {\n        window.web3.currentProvider.publicConfigStore.on('update', function () {\n          _this4.checkWeb3Compatibility();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      var w = window.innerWidth;\n      this.setState({\n        width: w,\n        isCollapsed: w <= 960\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      var inputMessage = this.state.inputMessage;\n\n      if (inputMessage) {\n        console.log('send message');\n        this.setState(function (prevState) {\n          prevState.inputMessage = '';\n          return prevState;\n        });\n      }\n\n      console.log(\"sending message\");\n      fetch('http://localhost:4050/graphql', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query: \"mutation($message: MessageInput!){ addMessage(message: $message){ content id } } \",\n          variables: \"{\\\"message\\\": {\\\"id_conversation\\\": \\\"5ca3a1ef1cbb8b36dbb6adf0\\\", \\\"id_sender\\\": \\\"\".concat(this.state.userID, \"\\\", \\\"content\\\": \\\"\").concat(inputMessage, \"\\\"}}\")\n        })\n      }); // `{ \"message\": { \"id_conversation\": \"5ca387903805a07cd4526d77\", \"id_sender\": \"${this.state.userID}\", \"content\": \"XD\" } }`\n\n      {\n        /*<Mutation mutation={gql`*/\n      }\n      {\n        /*        mutation ($content:String!,$id_conv:String!,$id_sender:String!){*/\n      }\n      {\n        /*          sendMessage(content: $content, id_conversation: $id_conv, id_sender: $id_sender) {*/\n      }\n      {\n        /*            id*/\n      }\n      {\n        /*          }*/\n      }\n      {\n        /*        }`*/\n      }\n      {\n        /*}>*/\n      }\n      {\n        /*    {(sendMessage, {data}) => (*/\n      }\n      {\n        /*        sendMessage({*/\n      }\n      {\n        /*                variables: {*/\n      }\n      {\n        /*                    content: \"inputMessage\",*/\n      }\n      {\n        /*                    id_sender: \"this.state.userID\",*/\n      }\n      {\n        /*                    id_conv: '5c98f6721c9d440000626e2e'*/\n      }\n      {\n        /*                }*/\n      }\n      {\n        /*            }*/\n      }\n      {\n        /*        )*/\n      }\n      {\n        /*    )}*/\n      }\n      {}\n      /*</Mutation>*/\n      // mutation\n      // sendMessage(\n      //     content: \"A dziękuję\",\n      //     id_conversation: \"5c98f6721c9d440000626e2e\",\n      //     id_sender: \"5ca1c9a11c9d4400003e3590\") {\n      //     content\n      // }\n    }\n  }, {\n    key: \"handleChangeInput\",\n    value: function handleChangeInput(event) {\n      var value = event.target.value;\n      this.setState({\n        inputMessage: value\n      });\n      console.log(\"input\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          conversations = _this$state.conversations,\n          userID = _this$state.userID,\n          groups = _this$state.groups,\n          activeConversation = _this$state.activeConversation,\n          isCollapsed = _this$state.isCollapsed,\n          mainItemActive = _this$state.mainItemActive,\n          inputMessage = _this$state.inputMessage;\n      var activeConvName = mainItemActive ? [] : conversations.find(this.findActive).name;\n      var activeEthWallet = mainItemActive ? [] : conversations.find(this.findActive).ethWallet;\n      var messagesList = conversations.length !== 0 && conversations.find(this.findActive) ? conversations.find(this.findActive).messages.map(function (message) {\n        return React.createElement(Message, {\n          message: message.inputMessage,\n          id: message.id,\n          key: message.id,\n          handleOver: _this5.showDetails // isActive={message.id_sender === userID}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        });\n      }) : [];\n      var groupsCompList = groups.map(function (chat) {\n        return React.createElement(ChatGroup, {\n          key: chat.id,\n          id: chat.id,\n          url: chat.avatar,\n          onClick: _this5.groupChanged,\n          active: chat.id === activeConversation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: isCollapsed ? styleOptCollapsed : styleOptUnCollapsed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(GroupsComponent, {\n        mainItemActive: mainItemActive,\n        openMainItem: this.openMainItem,\n        list: groupsCompList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }), this.state.mainItemActive ? React.createElement(AdvertsComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }) : React.createElement(ChatComponent, {\n        handleOver: this.showDetails,\n        userId: userID,\n        onSendToken: this.handleTokenTransfer,\n        conversationName: activeConvName,\n        messages: messagesList,\n        inputMessage: inputMessage,\n        onChange: function onChange(event) {\n          return _this5.handleChangeInput(event);\n        },\n        onKeyPress: this.handleKeyPress,\n        onClick: function onClick() {\n          return _this5.handleSend();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), !isCollapsed ? React.createElement(DetailsComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }) : null), this.isWeb3 && !this.isWeb3Locked ? React.createElement(Balance, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Stan konta: \", this.state.TeacheCoin.balance + \" \" + this.state.TeacheCoin.symbol, \" \") : null, this.state.modalDialogs.installMetamaskVisible ? React.createElement(InstallMetamask, {\n        onChange: this.closeDialogs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }) : null, this.state.modalDialogs.unlockMetamaskVisible ? React.createElement(UnlockMetamask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }) : null, this.state.modalDialogs.transferFormVisible ? React.createElement(TokenTransferForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$chatReducer = state.chatReducer,\n      conversations = _state$chatReducer.conversations,\n      groups = _state$chatReducer.groups;\n  var adverts = state.advertReducer.adverts;\n  return {\n    conversations: conversations,\n    groups: groups,\n    adverts: adverts\n  };\n}\n\nexport default MainPage = connect(mapStateToProps)(MainPage);","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/MainPage.js"],"names":["React","Component","ChatGroup","bgPic","Message","connect","GroupsComponent","ChatComponent","styled","DetailsComponent","Messages","Mutation","Query","gql","AdvertsComponent","InstallMetamask","UnlockMetamask","TokenTransferForm","TeacheCoin","Container","div","styleOptCollapsed","gridTemplateColumns","styleOptUnCollapsed","Balance","MainPage","props","closeDialogs","setState","modalDialogs","installMetamaskVisible","unlockMetamaskVisible","transferFormVisible","handleTokenTransfer","installMetamask","unlockMetamask","transferForm","isWeb3","isWeb3Locked","handleKeyPress","event","key","handleSend","openMainItem","mainItemActive","activeConversation","console","log","groupChanged","id","showDetails","findActive","conversation","state","conversations","groups","adverts","inputMessage","width","isCollapsed","userID","updateWindowDimensions","bind","loadBalance","checkWeb3Compatibility","window","web3","eth","getCoinbase","error","coinbase","token","balanceOf","response","balance","c","symbol","account","contract","abi","at","address","addEventListener","currentProvider","publicConfigStore","on","removeEventListener","w","innerWidth","prevState","fetch","method","headers","body","JSON","stringify","query","variables","value","target","activeConvName","find","name","activeEthWallet","ethWallet","messagesList","length","messages","map","message","groupsCompList","chat","avatar","handleChangeInput","mapStateToProps","chatReducer","advertReducer"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport ChatGroup from './ChatGroup'\nimport bgPic from \"../assets/mntnFHD_compressed_cut.jpeg\";\nimport Message from './Message'\n\nimport {connect} from \"react-redux\";\nimport GroupsComponent from \"./GroupsComponent\";\nimport ChatComponent from \"./ChatComponent\";\nimport styled from 'styled-components'\nimport {DetailsComponent} from \"./DetailsComponent\";\nimport '../styles/mainPage.scss'\nimport {Messages} from \"../data/Messages\";\nimport {Mutation, Query} from 'react-apollo'\nimport gql from 'graphql-tag'\nimport AdvertsComponent from \"./AdvertsComponent\";\n\nimport InstallMetamask from \"./Metamask\"\nimport UnlockMetamask from \"./Metamask\"\nimport TokenTransferForm from \"./TokenTransferForm\"\n\nimport TeacheCoin from \"../tokens/TeacheCoin\";\n// const Page = styled.div`\n//     // width: 100%;\n//     // height: 910px;\n//     // background-image: url(${bgPic})\n//     `;\n\nconst Container = styled.div`\n    position: absolute;\n    top: 5%;\n    left: 50%;\n    width: 90%;\n    height: 80%;\n    transform: translate(-50%);\n    display: grid;\n    grid-gap: 4px;`;\n\nconst styleOptCollapsed = {\n    gridTemplateColumns: '72px auto',\n    // gridTemplateRows: '95%',\n};\n\nconst styleOptUnCollapsed = {\n    gridTemplateColumns: '72px auto 320px',\n    // gridTemplateRows: '95%',\n};\n\nconst Balance = styled.div`\n    position: absolute;\n    font-size: 1.5em;\n    right: 1.5vw;\n    top: 1.5vh;\n    text-align: right;\n`\n\nclass MainPage extends Component {\n\n    constructor(props) {\n        super(props);\n        const {conversations, groups, adverts} = this.props;\n        \n        this.state = {\n            inputMessage: '',\n            activeConversation: conversations[0].id,\n            conversations: conversations,\n            groups: groups,\n            mainItemActive: true,\n            width: 0,\n            isCollapsed: false,\n            userID: '5ca1c9a11c9d4400003e3590',\n            modalDialogs: {\n                installMetamaskVisible: true,\n                unlockMetamaskVisible: false,\n                transferFormVisible: false\n            }\n        };\n\n        this.isWeb3 = false;\n        this.isWeb3Locked = false;\n\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.loadBalance = this.loadBalance.bind(this)\n        this.checkWeb3Compatibility = this.checkWeb3Compatibility.bind(this)\n    }\n\n    loadBalance() {\n        if(this.isWeb3) {\n            window.web3.eth.getCoinbase((error, coinbase) => {\n                if(false) {\n                    console.log(error)\n                } else {\n                    let token = this.state.TeacheCoin.token\n                    token.balanceOf(coinbase, (error, response) => {\n                        if(!error) {\n                            let balance = response.c[0] / 10000\n                            balance = balance >= 0 ? balance : 0\n\n                            this.setState({\n                                TeacheCoin: {\n                                    ...this.state.TeacheCoin,\n                                    balance: balance,\n                                    symbol: TeacheCoin.symbol\n                                }\n                            }, () => {\n                                console.log(this.state)\n                            })\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    checkWeb3Compatibility () {\n        if(window.web3) {\n            this.isWeb3 = true;\n            window.web3.eth.getCoinbase((error, coinbase) => {\n                if(error || coinbase === null) {\n                    this.isWeb3Locked = true;\n                } else {\n                    this.isWeb3Locked = false;\n                    this.setState({\n                        TeacheCoin: {\n                            ...this.state.TeacheCoin,\n                            account: coinbase,\n                            token: window.web3.eth.contract(TeacheCoin.abi).at(TeacheCoin.address)\n                        }\n                    }, () => {\n                        this.loadBalance()\n                    })\n                }\n            })\n        } else {\n            this.isWeb3 = false;\n        }\n    }\n\n    closeDialogs = () => {\n        this.setState({\n            modalDialogs: {\n                installMetamaskVisible: false,\n                unlockMetamaskVisible: false,\n                transferFormVisible: false\n            }\n        })\n    }\n\n    handleTokenTransfer = () => {\n        let installMetamask = false\n        let unlockMetamask = false\n        let transferForm = false\n\n        if(!this.isWeb3) {\n            installMetamask = true\n        } else if(this.isWeb3Locked) {\n            unlockMetamask = true\n        } else {\n            transferForm = true\n        }\n\n        this.setState({\n            modalDialogs: {\n                installMetamaskVisible: installMetamask,\n                unlockMetamaskVisible: unlockMetamask,\n                transferFormVisible: transferForm\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions)\n        window.addEventListener('load', this.checkWeb3Compatibility)\n\n        if(window.web3) {\n            window.web3.currentProvider.publicConfigStore.on('update', () => {\n                this.checkWeb3Compatibility()\n            })\n        }\n    }\n\n    componentWillMount() {\n        window.removeEventListener('resize', this.updateWindowDimensions)\n    }\n\n    updateWindowDimensions() {\n        const w = window.innerWidth;\n        this.setState({\n            width: w,\n            isCollapsed: w <= 960\n        });\n    }\n\n    handleSend() {\n        const {inputMessage} = this.state;\n        if (inputMessage) {\n            console.log('send message');\n            this.setState(prevState => {\n                prevState.inputMessage = '';\n                return prevState\n            });\n        }\n        console.log(\"sending message\");\n        fetch('http://localhost:4050/graphql', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query: `mutation($message: MessageInput!){ addMessage(message: $message){ content id } } `,\n                variables: `{\"message\": {\"id_conversation\": \"5ca3a1ef1cbb8b36dbb6adf0\", \"id_sender\": \"${this.state.userID}\", \"content\": \"${inputMessage}\"}}`\n            })\n        });\n        // `{ \"message\": { \"id_conversation\": \"5ca387903805a07cd4526d77\", \"id_sender\": \"${this.state.userID}\", \"content\": \"XD\" } }`\n\n\n        {/*<Mutation mutation={gql`*/\n        }\n        {/*        mutation ($content:String!,$id_conv:String!,$id_sender:String!){*/\n        }\n        {/*          sendMessage(content: $content, id_conversation: $id_conv, id_sender: $id_sender) {*/\n        }\n        {/*            id*/\n        }\n        {/*          }*/\n        }\n        {/*        }`*/\n        }\n        {/*}>*/\n        }\n        {/*    {(sendMessage, {data}) => (*/\n        }\n        {/*        sendMessage({*/\n        }\n        {/*                variables: {*/\n        }\n        {/*                    content: \"inputMessage\",*/\n        }\n        {/*                    id_sender: \"this.state.userID\",*/\n        }\n        {/*                    id_conv: '5c98f6721c9d440000626e2e'*/\n        }\n        {/*                }*/\n        }\n        {/*            }*/\n        }\n        {/*        )*/\n        }\n        {/*    )}*/\n        }\n        {/*</Mutation>*/\n        }\n\n        // mutation\n        // sendMessage(\n        //     content: \"A dziękuję\",\n        //     id_conversation: \"5c98f6721c9d440000626e2e\",\n        //     id_sender: \"5ca1c9a11c9d4400003e3590\") {\n        //     content\n        // }\n\n    }\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.handleSend();\n        }\n    };\n\n    handleChangeInput(event) {\n        const {value} = event.target;\n        this.setState({\n            inputMessage: value\n        });\n        console.log(\"input\")\n    }\n\n    openMainItem = () => {\n        this.setState({\n            mainItemActive: true,\n            activeConversation: null\n        });\n        console.log(\"Open Main Item\")\n    };\n\n\n    groupChanged = (id) => {\n        console.log(\"group changed: \", id);\n        this.setState({\n            activeConversation: id,\n            mainItemActive: false\n        });\n    };\n\n    showDetails = (id) => {\n        console.log(id);\n    };\n\n    findActive = (conversation) => {\n        const {activeConversation} = this.state;\n        return conversation.id === activeConversation\n    };\n\n    render() {\n        const {\n            conversations,\n            userID,\n            groups,\n            activeConversation,\n            isCollapsed,\n            mainItemActive,\n            inputMessage,\n        } = this.state;\n        \n        const activeConvName = mainItemActive ? [] : conversations.find(this.findActive).name\n\n        const activeEthWallet = mainItemActive ? [] : conversations.find(this.findActive).ethWallet\n   \n        const messagesList = conversations.length !== 0 && conversations.find(this.findActive)\n            ? conversations.find(this.findActive).messages.map(message =>\n                <Message\n                    message={message.inputMessage}\n                    id={message.id}\n                    key={message.id}\n                    handleOver={this.showDetails}\n                    // isActive={message.id_sender === userID}\n                />)\n            : [];\n\n        const groupsCompList =\n            groups.map(chat =>\n                <ChatGroup\n                    key={chat.id}\n                    id={chat.id}\n                    url={chat.avatar}\n                    onClick={this.groupChanged}\n                    active={chat.id === activeConversation}/>);\n\n        return (\n            <div>\n                \n                <Container\n                    style={isCollapsed ? styleOptCollapsed : styleOptUnCollapsed}>\n                    <GroupsComponent\n                        mainItemActive={mainItemActive}\n                        openMainItem={this.openMainItem}\n                        list={groupsCompList}/>\n                {/**/}\n                    {this.state.mainItemActive\n                        ? <AdvertsComponent />\n                        : <ChatComponent\n                        handleOver={this.showDetails}\n                        userId={userID}\n                        onSendToken={this.handleTokenTransfer}\n                        conversationName={activeConvName}\n                        messages={messagesList}\n                        inputMessage={inputMessage}\n                        onChange={event => this.handleChangeInput(event)}\n                        onKeyPress={this.handleKeyPress}\n                        onClick={() => this.handleSend()}/>\n                    }\n                    {!isCollapsed ? <DetailsComponent/> : null}\n                </Container>\n\n                { this.isWeb3 && !this.isWeb3Locked\n                    ? <Balance>Stan konta: {this.state.TeacheCoin.balance + \" \" + this.state.TeacheCoin.symbol} </Balance>\n                    : null}\n\n                { this.state.modalDialogs.installMetamaskVisible\n                    ? <InstallMetamask onChange={this.closeDialogs}/>\n                    : null}\n                \n                { this.state.modalDialogs.unlockMetamaskVisible\n                    ? <UnlockMetamask />\n                    : null}\n\n                { this.state.modalDialogs.transferFormVisible\n                    ? <TokenTransferForm />\n                    : null}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const {conversations, groups} = state.chatReducer;\n    const {adverts} = state.advertReducer;\n    return {conversations, groups, adverts};\n}\n\nexport default MainPage = connect(mapStateToProps)(MainPage);\n"]},"metadata":{},"sourceType":"module"}