{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/Message.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n        .date {\\n            font-size: 10px;\\n            color: #ecf0f1;\\n        }\\n        .content{\\n                font-size: 20px;\\n                padding: 6px;\\n        }\\n        .tag {\\n            display: inline;\\n            font-size: 12px;\\n            font-style: italic;\\n            color: gray;\\n        }\\n        display: inline;\\n        border-radius: 10px;\\n        padding: 4px;\\n        background-color: rgba(103, 84, 89, 0.7);\\n        float: left;\\n        margin: 3px;\\n        clear: both;\\n        max-width: 70%;\\n        min-width: 5%;\\n        \\n        & > img {\\n            width: 100%;\\n            height: auto;\\n        }\\n        \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        text-align: right;\\n        .date {\\n            font-size: 10px;\\n            color: #ecf0f1;\\n        }\\n        .content{\\n                font-size: 20px;\\n                padding: 6px;\\n        }\\n        .tag {\\n            display: inline;\\n            font-size: 12px;\\n            font-style: italic;\\n            color: gray;\\n        }\\n        display: inline;\\n        border-radius: 10px;\\n        padding: 4px;\\n        background-color: rgba(103, 84, 89, 1);\\n        float: right;\\n        margin: 3px;\\n        clear: both;\\n        max-width: 70%;\\n        min-width: 5%;\\n        \\n        & > img {\\n            width: 100%;\\n            height: auto;\\n        }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nvar MyMessage = styled.div(_templateObject());\nvar FriendMessage = styled.div(_templateObject2());\n\nfunction isImageMessage(message) {\n  return /^(<input *type=\"image\" *src=\".*\" *\\/>)$/.test(message);\n}\n\nfunction parseMessageContent(content) {\n  if (isImageMessage(content)) {\n    var imageLink = content.match(/src=\".*\"/g);\n    if (imageLink == null) return null;\n    imageLink += '';\n    imageLink = imageLink.slice(5, imageLink.length - 1);\n    return React.createElement(\"img\", {\n      className: \"content\",\n      src: imageLink,\n      alt: \"conv-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, content);\n  }\n}\n\nfunction Message(props) {\n  // getMessageContent = () => {\n  //         return props.isActive\n  //             ? <MyMessage\n  //                 // onMouseOver={() => props.handleOver(props.id)}\n  //             >\n  //                     <div className={\"date\"}>{dateStr}</div>\n  //                     <div className={\"content\"}>{props.model.content}</div>\n  //                     {props.model.tags ? props.model.tags.map(tag => <div className={\"tag\"}>{`#${tag} `}</div>) : []}\n  //             </MyMessage>\n  //             : <FriendMessage\n  //                 // onMouseOver={() => props.handleOver(props.id)}\n  //             >\n  //                     <div className={\"date\"}>{dateStr}</div>\n  //                     <div className={\"content\"}>{props.model.content}</div>\n  //                     {props.model.tags ? props.model.tags.map(tag => <div className={\"tag\"}>{`#${tag}`}</div>) : []}\n  //             </FriendMessage>\n  // };\n  var dt = new Date(props.model.date);\n  var dateStr = \"\".concat(dt.getDay(), \".\").concat(dt.getMonth(), \".\").concat(dt.getFullYear(), \" \").concat(dt.getHours(), \":\").concat(dt.getMinutes());\n  console.log(props.model.sender);\n  return props.isActive ? React.createElement(MyMessage // onMouseOver={() => props.handleOver(props.id)}\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.showNickname ? React.createElement(\"div\", {\n    style: {\n      color: '#ffffff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"@\", props.model.sender.nickname) : [], parseMessageContent(props.model.content), props.model.tags ? props.model.tags.map(function (tag) {\n    return React.createElement(\"div\", {\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"#\".concat(tag, \" \"));\n  }) : []) : React.createElement(FriendMessage // onMouseOver={() => props.handleOver(props.id)}\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, props.showNickname ? React.createElement(\"div\", {\n    style: {\n      color: '#ffffff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"@\", props.model.sender.nickname) : [], parseMessageContent(props.model.content), props.model.tags ? props.model.tags.map(function (tag) {\n    return React.createElement(\"div\", {\n      style: {\n        color: '#e5cc92'\n      },\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"#\".concat(tag));\n  }) : []);\n}\n\nexport default Message;","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/Message.js"],"names":["React","styled","MyMessage","div","FriendMessage","isImageMessage","message","test","parseMessageContent","content","imageLink","match","slice","length","Message","props","dt","Date","model","date","dateStr","getDay","getMonth","getFullYear","getHours","getMinutes","console","log","sender","isActive","showNickname","color","nickname","tags","map","tag"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,mBAAf;AA+BA,IAAMC,aAAa,GAAGH,MAAM,CAACE,GAAV,oBAAnB;;AA+BA,SAASE,cAAT,CAAwBC,OAAxB,EAAiC;AAC7B,SAAO,0CAA0CC,IAA1C,CAA+CD,OAA/C,CAAP;AACH;;AAED,SAASE,mBAAT,CAA6BC,OAA7B,EAAsC;AAClC,MAAGJ,cAAc,CAACI,OAAD,CAAjB,EAA4B;AACxB,QAAIC,SAAS,GAAGD,OAAO,CAACE,KAAR,CAAc,WAAd,CAAhB;AAEA,QAAGD,SAAS,IAAI,IAAhB,EACI,OAAO,IAAP;AAEJA,IAAAA,SAAS,IAAI,EAAb;AACAA,IAAAA,SAAS,GAAGA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmBF,SAAS,CAACG,MAAV,GAAmB,CAAtC,CAAZ;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAEH,SAA9B;AAAyC,MAAA,GAAG,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAZD,MAYO;AACH,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,OAA1B,CADJ;AAGH;AACJ;;AAED,SAASK,OAAT,CAAiBC,KAAjB,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,EAAE,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,KAAN,CAAYC,IAArB,CAAX;AACA,MAAMC,OAAO,aAAMJ,EAAE,CAACK,MAAH,EAAN,cAAqBL,EAAE,CAACM,QAAH,EAArB,cAAsCN,EAAE,CAACO,WAAH,EAAtC,cAA0DP,EAAE,CAACQ,QAAH,EAA1D,cAA2ER,EAAE,CAACS,UAAH,EAA3E,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACG,KAAN,CAAYU,MAAxB;AACA,SAAOb,KAAK,CAACc,QAAN,GACD,oBAAC,SAAD,CACE;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGd,KAAK,CAACe,YAAN,GAAqB;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkChB,KAAK,CAACG,KAAN,CAAYU,MAAZ,CAAmBI,QAArD,CAArB,GAA4F,EAJ/F,EAKGxB,mBAAmB,CAACO,KAAK,CAACG,KAAN,CAAYT,OAAb,CALtB,EAMGM,KAAK,CAACG,KAAN,CAAYe,IAAZ,GAAmBlB,KAAK,CAACG,KAAN,CAAYe,IAAZ,CAAiBC,GAAjB,CAAqB,UAAAC,GAAG;AAAA,WAAI;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4BA,GAA5B,OAAJ;AAAA,GAAxB,CAAnB,GAA4F,EAN/F,CADC,GASD,oBAAC,aAAD,CACE;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGpB,KAAK,CAACe,YAAN,GAAqB;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkChB,KAAK,CAACG,KAAN,CAAYU,MAAZ,CAAmBI,QAArD,CAArB,GAA4F,EAJ/F,EAKGxB,mBAAmB,CAACO,KAAK,CAACG,KAAN,CAAYT,OAAb,CALtB,EAMGM,KAAK,CAACG,KAAN,CAAYe,IAAZ,GAAmBlB,KAAK,CAACG,KAAN,CAAYe,IAAZ,CAAiBC,GAAjB,CAAqB,UAAAC,GAAG;AAAA,WAAI;AAAK,MAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAE;AAAR,OAAZ;AACK,MAAA,SAAS,EAAE,KADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC4BI,GAD5B,EAAJ;AAAA,GAAxB,CAAnB,GAC2F,EAP9F,CATN;AAkBH;;AAED,eAAerB,OAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst MyMessage = styled.div`\r\n        text-align: right;\r\n        .date {\r\n            font-size: 10px;\r\n            color: #ecf0f1;\r\n        }\r\n        .content{\r\n                font-size: 20px;\r\n                padding: 6px;\r\n        }\r\n        .tag {\r\n            display: inline;\r\n            font-size: 12px;\r\n            font-style: italic;\r\n            color: gray;\r\n        }\r\n        display: inline;\r\n        border-radius: 10px;\r\n        padding: 4px;\r\n        background-color: rgba(103, 84, 89, 1);\r\n        float: right;\r\n        margin: 3px;\r\n        clear: both;\r\n        max-width: 70%;\r\n        min-width: 5%;\r\n        \r\n        & > img {\r\n            width: 100%;\r\n            height: auto;\r\n        }\r\n        `;\r\nconst FriendMessage = styled.div`\r\n        .date {\r\n            font-size: 10px;\r\n            color: #ecf0f1;\r\n        }\r\n        .content{\r\n                font-size: 20px;\r\n                padding: 6px;\r\n        }\r\n        .tag {\r\n            display: inline;\r\n            font-size: 12px;\r\n            font-style: italic;\r\n            color: gray;\r\n        }\r\n        display: inline;\r\n        border-radius: 10px;\r\n        padding: 4px;\r\n        background-color: rgba(103, 84, 89, 0.7);\r\n        float: left;\r\n        margin: 3px;\r\n        clear: both;\r\n        max-width: 70%;\r\n        min-width: 5%;\r\n        \r\n        & > img {\r\n            width: 100%;\r\n            height: auto;\r\n        }\r\n        `;\r\n\r\nfunction isImageMessage(message) {\r\n    return /^(<input *type=\"image\" *src=\".*\" *\\/>)$/.test(message);\r\n}\r\n\r\nfunction parseMessageContent(content) {\r\n    if(isImageMessage(content)) {\r\n        let imageLink = content.match(/src=\".*\"/g);\r\n        \r\n        if(imageLink == null)\r\n            return null;\r\n        \r\n        imageLink += '';\r\n        imageLink = imageLink.slice(5, imageLink.length - 1)\r\n        \r\n        return (\r\n            <img className=\"content\" src={imageLink} alt=\"conv-img\" />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"content\">{content}</div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Message(props) {\r\n    // getMessageContent = () => {\r\n    //         return props.isActive\r\n    //             ? <MyMessage\r\n    //                 // onMouseOver={() => props.handleOver(props.id)}\r\n    //             >\r\n    //                     <div className={\"date\"}>{dateStr}</div>\r\n    //                     <div className={\"content\"}>{props.model.content}</div>\r\n    //                     {props.model.tags ? props.model.tags.map(tag => <div className={\"tag\"}>{`#${tag} `}</div>) : []}\r\n    //             </MyMessage>\r\n    //             : <FriendMessage\r\n    //                 // onMouseOver={() => props.handleOver(props.id)}\r\n    //             >\r\n    //                     <div className={\"date\"}>{dateStr}</div>\r\n    //                     <div className={\"content\"}>{props.model.content}</div>\r\n    //                     {props.model.tags ? props.model.tags.map(tag => <div className={\"tag\"}>{`#${tag}`}</div>) : []}\r\n    //             </FriendMessage>\r\n    // };\r\n\r\n    const dt = new Date(props.model.date);\r\n    const dateStr = `${dt.getDay()}.${dt.getMonth()}.${dt.getFullYear()} ${dt.getHours()}:${dt.getMinutes()}`;\r\n    console.log(props.model.sender);\r\n    return props.isActive\r\n        ? <MyMessage\r\n            // onMouseOver={() => props.handleOver(props.id)}\r\n        >\r\n            {/*<div className={\"date\"}>{dateStr}</div>*/}\r\n            {props.showNickname ? <div style={{color: '#ffffff'}}>@{props.model.sender.nickname}</div> : []}\r\n            {parseMessageContent(props.model.content)}\r\n            {props.model.tags ? props.model.tags.map(tag => <div className={\"tag\"}>{`#${tag} `}</div>) : []}\r\n        </MyMessage>\r\n        : <FriendMessage\r\n            // onMouseOver={() => props.handleOver(props.id)}\r\n        >\r\n            {/*<div className={\"date\"}>{dateStr}</div>*/}\r\n            {props.showNickname ? <div style={{color: '#ffffff'}}>@{props.model.sender.nickname}</div> : []}\r\n            {parseMessageContent(props.model.content)}\r\n            {props.model.tags ? props.model.tags.map(tag => <div style={{color: '#e5cc92'}}\r\n                                                                 className={\"tag\"}>{`#${tag}`}</div>) : []}\r\n        </FriendMessage>\r\n}\r\n\r\nexport default Message\r\n"]},"metadata":{},"sourceType":"module"}