{"ast":null,"code":"import _classCallCheck from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/DetailsComponent.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: inline-block;\\n    background-color: rgba(46, 21, 27, 0.5);\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport { apolloClient } from '../apollo';\nimport { GET_ME, getConversationGql } from '../queries/gql';\nimport { graphql } from 'react-apollo';\nimport UserInfo from './UserInfo';\nimport ConvInfo from './ConvInfo';\nvar Details = styled.div(_templateObject());\n\nvar DetailsComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DetailsComponent, _Component);\n\n  function DetailsComponent() {\n    _classCallCheck(this, DetailsComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DetailsComponent).apply(this, arguments));\n  }\n\n  _createClass(DetailsComponent, [{\n    key: \"getCostam\",\n    value: function getCostam() {\n      var activeConversation = this.props.activeConv;\n      var data = apolloClient.query({\n        query: getConversationGql,\n        variables: {\n          activeConversation: activeConversation\n        }\n      });\n      return data.name; // await result = client.query({ query: YOUR_QUERY, variables: { });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isMainActive = this.props.isMainActive;\n      return React.createElement(Details, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, isMainActive ? React.createElement(UserInfo, {\n        userId: this.props.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }) : React.createElement(ConvInfo, {\n        activeConv: this.props.activeConv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DetailsComponent;\n}(Component);\n\nexport default graphql(getConversationGql, {\n  options: function options(props) {\n    return {\n      variables: {\n        activeConversation: props.activeConv\n      }\n    };\n  }\n})(DetailsComponent);","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/DetailsComponent.js"],"names":["styled","React","Component","Query","apolloClient","GET_ME","getConversationGql","graphql","UserInfo","ConvInfo","Details","div","DetailsComponent","activeConversation","props","activeConv","data","query","variables","name","isMainActive","userId","options"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,gBAA3C;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,OAAO,GAAGV,MAAM,CAACW,GAAV,mBAAb;;IAIMC,gB;;;;;;;;;;;;;gCAEU;AACR,UAAMC,kBAAkB,GAAG,KAAKC,KAAL,CAAWC,UAAtC;AACA,UAAMC,IAAI,GAAGZ,YAAY,CAACa,KAAb,CAAmB;AAC5BA,QAAAA,KAAK,EAAEX,kBADqB;AAE5BY,QAAAA,SAAS,EAAE;AACPL,UAAAA,kBAAkB,EAAlBA;AADO;AAFiB,OAAnB,CAAb;AAOA,aAAOG,IAAI,CAACG,IAAZ,CATQ,CAUR;AACH;;;6BAEQ;AACL,UAAMC,YAAY,GAAG,KAAKN,KAAL,CAAWM,YAAhC;AACA,aACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,YAAY,GAAG,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAA4C,oBAAC,QAAD;AAAU,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD7D,CADJ;AAIH;;;;EArB0Bb,S;;AAwB/B,eACIK,OAAO,CAACD,kBAAD,EAAqB;AACxBgB,EAAAA,OAAO,EAAE,iBAACR,KAAD;AAAA,WAAY;AACjBI,MAAAA,SAAS,EAAE;AACPL,QAAAA,kBAAkB,EAAEC,KAAK,CAACC;AADnB;AADM,KAAZ;AAAA;AADe,CAArB,CAAP,CAMIH,gBANJ,CADJ","sourcesContent":["import styled from 'styled-components'\nimport React, {Component} from 'react'\nimport { Query } from 'react-apollo';\nimport { apolloClient } from '../apollo'\nimport { GET_ME, getConversationGql } from '../queries/gql'\nimport { graphql } from 'react-apollo'\nimport UserInfo from './UserInfo'\nimport ConvInfo from './ConvInfo'\n\nconst Details = styled.div`\n    display: inline-block;\n    background-color: rgba(46, 21, 27, 0.5);`;\n\nclass DetailsComponent extends Component{\n\n    getCostam() {\n        const activeConversation = this.props.activeConv\n        const data = apolloClient.query({\n            query: getConversationGql, \n            variables: {\n                activeConversation\n            } \n        })\n\n        return data.name\n        // await result = client.query({ query: YOUR_QUERY, variables: { });\n    }\n\n    render() {\n        const isMainActive = this.props.isMainActive;\n        return (\n            <Details>\n                {isMainActive ? <UserInfo userId={this.props.userId}/> : <ConvInfo activeConv={this.props.activeConv}/>}\n            </Details>)\n    }\n}\n\nexport default \n    graphql(getConversationGql, { \n        options: (props) => ({ \n            variables: { \n                activeConversation: props.activeConv\n            } \n        })\n    })( DetailsComponent );\n"]},"metadata":{},"sourceType":"module"}