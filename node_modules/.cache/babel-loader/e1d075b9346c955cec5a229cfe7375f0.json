{"ast":null,"code":"import _classCallCheck from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/Metamask.js\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    display: inline-flex;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: lightgreen;\\n\\n    &:hover {\\n        background-color: darkgreen;\\n        border: 2px solid white;\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: palevioletred;\\n    padding: 0.75rem 1.5rem;\\n    color: white;\\n    border: transparent;\\n    margin-top: 2em;\\n    margin-bottom: 2em;\\n\\n    border-radius: 0.5em;\\n\\n    &:hover {\\n        background-color: darkvioletred;\\n        border: 2px solid white;\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    max-width: 50vw;\\n    max-height: 50vh;\\n    height: auto;\\n    width: auto;\\n    object-fit: contain;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    align-items: center;\\n    text-align: center;\\n    padding: 2vh 1.5vw 2vh 1.5vw;\\n    z-index: 1000;\\n    position: absolute;\\n    background: #ffffff;\\n    left: 50%;\\n    top: 50%;\\n    transform: translateX(-50%) translateY(-50%);\\n    border-radius: 15px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    color: #000000\\n    & > .metamask-title {\\n        font-size: 3vh;\\n    }\\n\\n    & > .metamask-message {\\n        font-size: 1.5vh;\\n    }\\n\\n    & > .metamask-unlock {\\n        font-size: 2vh;\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nvar Text = styled.p(_templateObject());\nvar FormWindow = styled.div(_templateObject2());\nvar MetamaskImage = styled.img(_templateObject3());\nvar BackButton = styled.button(_templateObject4());\nvar SendButton = styled(BackButton)(_templateObject5());\nvar TransferForm = styled.form(_templateObject6());\nexport var InstallMetamask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InstallMetamask, _Component);\n\n  function InstallMetamask() {\n    _classCallCheck(this, InstallMetamask);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InstallMetamask).apply(this, arguments));\n  }\n\n  _createClass(InstallMetamask, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.show) {\n        return null;\n      }\n\n      return React.createElement(FormWindow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"image download-metamask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"metamask-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"You have to install Metamask to use our token system!\"), React.createElement(\"p\", {\n        className: \"metamask-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Click on the image below to install Metamask extension\")), React.createElement(\"a\", {\n        href: \"https://metamask.io/\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(MetamaskImage, {\n        src: \"https://metamask.io/img/metamask.png\",\n        alt: \"Metamask icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(BackButton, {\n        onClick: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Zamknij\"));\n    }\n  }]);\n\n  return InstallMetamask;\n}(Component);\nInstallMetamask.propTypes = {\n  close: PropTypes.func.isRequired,\n  show: PropTypes.bool\n};\nexport var UnlockMetamask =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(UnlockMetamask, _Component2);\n\n  function UnlockMetamask() {\n    _classCallCheck(this, UnlockMetamask);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UnlockMetamask).apply(this, arguments));\n  }\n\n  _createClass(UnlockMetamask, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.show) {\n        return null;\n      }\n\n      return React.createElement(FormWindow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notification is-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"metamask-unlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Your account is locked! Please unlock your Metamask vault!\")), React.createElement(BackButton, {\n        onClick: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Zamknij\")));\n    }\n  }]);\n\n  return UnlockMetamask;\n}(Component);\nexport var TokenTransferForm =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TokenTransferForm, _Component3);\n\n  function TokenTransferForm() {\n    _classCallCheck(this, TokenTransferForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TokenTransferForm).apply(this, arguments));\n  }\n\n  _createClass(TokenTransferForm, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.show) {\n        return null;\n      }\n\n      return React.createElement(FormWindow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(TransferForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.props.targetAddress,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        min: 0,\n        max: this.props.balance,\n        placeholder: \"Amount to send, example: 100 \" + this.props.symbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(BackButton, {\n        onClick: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Zamknij\"), React.createElement(SendButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Wy\\u015Blij\"));\n    }\n  }]);\n\n  return TokenTransferForm;\n}(Component);\nTokenTransferForm.propTypes = {\n  userAddress: PropTypes.string,\n  targetAddress: PropTypes.string,\n  balance: PropTypes.number,\n  contract: PropTypes.object,\n  symbol: PropTypes.string,\n  show: PropTypes.bool\n};\nexport default InstallMetamask;","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/Metamask.js"],"names":["React","Component","styled","PropTypes","Text","p","FormWindow","div","MetamaskImage","img","BackButton","button","SendButton","TransferForm","form","InstallMetamask","props","show","close","propTypes","func","isRequired","bool","UnlockMetamask","TokenTransferForm","targetAddress","balance","symbol","userAddress","string","number","contract","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst Text = styled.p`\n    color: #000000\n    & > .metamask-title {\n        font-size: 3vh;\n    }\n\n    & > .metamask-message {\n        font-size: 1.5vh;\n    }\n\n    & > .metamask-unlock {\n        font-size: 2vh;\n    }\n`\n\nconst FormWindow = styled.div`\n    align-items: center;\n    text-align: center;\n    padding: 2vh 1.5vw 2vh 1.5vw;\n    z-index: 1000;\n    position: absolute;\n    background: #ffffff;\n    left: 50%;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    border-radius: 15px;\n`\n\nconst MetamaskImage = styled.img`\n    max-width: 50vw;\n    max-height: 50vh;\n    height: auto;\n    width: auto;\n    object-fit: contain;\n`\n\nconst BackButton = styled.button`\n    background-color: palevioletred;\n    padding: 0.75rem 1.5rem;\n    color: white;\n    border: transparent;\n    margin-top: 2em;\n    margin-bottom: 2em;\n\n    border-radius: 0.5em;\n\n    &:hover {\n        background-color: darkvioletred;\n        border: 2px solid white;\n    }\n`\n\nconst SendButton = styled(BackButton)`\n    background-color: lightgreen;\n\n    &:hover {\n        background-color: darkgreen;\n        border: 2px solid white;\n    }\n`\n\nconst TransferForm = styled.form`\n    display: inline-flex;\n`\n\nexport class InstallMetamask extends Component {\n    render() {\n        if(!this.props.show) {\n            return null\n        }\n\n        return (\n            <FormWindow>\n                <p className=\"image download-metamask\">\n                        <Text>\n                            <p className=\"metamask-title\">You have to install Metamask to use our token system!</p>\n                            <p className=\"metamask-message\">Click on the image below to install Metamask extension</p>\n                        </Text>\n                        <a href=\"https://metamask.io/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                            <MetamaskImage src=\"https://metamask.io/img/metamask.png\" alt=\"Metamask icon\"/>\n                        </a>\n                    </p>\n                    <BackButton onClick={this.props.close}>Zamknij</BackButton>\n            </FormWindow>\n        )\n    }\n}\n\nInstallMetamask.propTypes = {\n    close: PropTypes.func.isRequired,\n    show: PropTypes.bool\n}\n\nexport class UnlockMetamask extends Component {\n    render() {\n        if(!this.props.show) {\n            return null\n        }\n\n        return (\n            <FormWindow>\n                <div className=\"notification is-danger\">\n                    <Text>\n                        <p className=\"metamask-unlock\">Your account is locked! Please unlock your Metamask vault!</p>\n                    </Text>\n                    <BackButton onClick={this.props.close}>Zamknij</BackButton>\n                </div>\n            </FormWindow>\n        )\n    }\n}\n\nexport class TokenTransferForm extends Component {\n\n    render() {\n        if(!this.props.show) {\n            return null\n        }\n\n        return (\n            <FormWindow>\n                <TransferForm>\n                    <input type=\"text\" value={this.props.targetAddress} disabled />\n                    <input type=\"number\" min={0} max={this.props.balance} placeholder={\"Amount to send, example: 100 \" + this.props.symbol} />\n                </TransferForm>\n                <BackButton onClick={this.props.close}>Zamknij</BackButton>\n                <SendButton>Wyślij</SendButton>\n            </FormWindow>\n        )\n    }\n}\n\nTokenTransferForm.propTypes = {\n    userAddress: PropTypes.string,\n    targetAddress: PropTypes.string,\n    balance: PropTypes.number,\n    contract: PropTypes.object,\n    symbol: PropTypes.string,\n    show: PropTypes.bool\n}\n\nexport default InstallMetamask;"]},"metadata":{},"sourceType":"module"}