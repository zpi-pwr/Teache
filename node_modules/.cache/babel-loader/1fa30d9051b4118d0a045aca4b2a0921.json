{"ast":null,"code":"import _objectSpread from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/MainPage.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    font-size: 1.5em;\\n    right: 5vw;\\n    top: 1vh;\\n    text-align: right;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 10%;\\n    left: 50%;\\n    width: 90vw;\\n    height: 90vh;\\n    transform: translate(-50%);\\n    display: grid;\\n    grid-gap: 4px;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport ChatGroup from './ChatGroup';\nimport bgPic from \"../assets/mntnFHD_compressed_cut.jpeg\";\nimport Message from './Message';\nimport { connect } from \"react-redux\";\nimport GroupsComponent from \"./GroupsComponent\";\nimport ChatComponent from \"./ChatComponent\";\nimport styled from 'styled-components';\nimport DetailsComponent from \"./DetailsComponent\";\nimport '../styles/mainPage.scss';\nimport { Messages } from \"../data/Messages\";\nimport { Mutation, Query, graphql, compose } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport AdvertsComponent from \"./AdvertsComponent\";\nimport { SEND_MESSAGE_GQL, getConversationGql, GET_ME } from \"../queries/gql\";\nimport { InstallMetamask, UnlockMetamask, TokenTransferForm } from \"./Metamask\";\nimport TeacheCoin from \"../tokens/TeacheCoin\";\nimport { NavLink } from \"react-router-dom\";\nimport { TOKEN_SPRING } from \"../constraints\";\nimport { fileService } from \"../service/fileService\";\nvar Container = styled.div(_templateObject());\nvar styleOptCollapsed = {\n  gridTemplateColumns: '230px auto',\n  gridTemplateRows: '95%'\n};\nvar styleOptUnCollapsed = {\n  gridTemplateColumns: '230px auto 320px',\n  gridTemplateRows: '95%'\n};\nvar Balance = styled.div(_templateObject2());\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props)); // const {conversations, groups} = this.props;\n\n    _this.closeDialogs = function () {\n      _this.setState({\n        modalDialogs: {\n          installMetamaskVisible: false,\n          unlockMetamaskVisible: false,\n          transferFormVisible: false\n        }\n      });\n    };\n\n    _this.handleTokenTransfer = function () {\n      var installMetamask = false;\n      var unlockMetamask = false;\n      var transferForm = false;\n\n      if (!_this.isWeb3) {\n        installMetamask = true;\n      } else if (_this.isWeb3Locked) {\n        unlockMetamask = true;\n      } else {\n        transferForm = true;\n      }\n\n      _this.setState({\n        modalDialogs: {\n          installMetamaskVisible: installMetamask,\n          unlockMetamaskVisible: unlockMetamask,\n          transferFormVisible: transferForm\n        }\n      });\n    };\n\n    _this.handleKeyPress = function (event) {\n      if (event.key === 'Enter') {\n        _this.handleSend();\n      }\n    };\n\n    _this.openMainItem = function () {\n      _this.setState({\n        mainItemActive: true,\n        activeConversation: null\n      });\n\n      console.log(\"Open Main Item\");\n    };\n\n    _this.groupChanged = function (id) {\n      console.log(\"group changed: \", id);\n\n      _this.setState({\n        activeConversation: id,\n        mainItemActive: false\n      });\n    };\n\n    _this.showDetails = function (id) {\n      console.log(id);\n    };\n\n    _this.findActive = function (conversation) {\n      var activeConversation = _this.state.activeConversation;\n      return conversation.id === activeConversation;\n    };\n\n    _this.onNewData = function (wallet) {\n      if (_this.state.wallet !== _this.state.activeEthWallet) {\n        _this.setState({\n          activeEthWallet: wallet\n        });\n\n        console.log(\"active wallet: \".concat(wallet));\n      }\n    };\n\n    _this.state = {\n      inputMessage: '',\n      activeConversation: 0,\n      mainItemActive: true,\n      width: 0,\n      isCollapsed: false,\n      userID: '5ca1c9a11c9d4400003e3590',\n      nickname: \"Monteth\",\n      modalDialogs: {\n        installMetamaskVisible: false,\n        unlockMetamaskVisible: false,\n        transferFormVisible: false\n      }\n    };\n    _this.isWeb3 = false;\n    _this.isWeb3Locked = false;\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadBalance = _this.loadBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkWeb3Compatibility = _this.checkWeb3Compatibility.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"loadBalance\",\n    value: function loadBalance() {\n      var _this2 = this;\n\n      if (this.isWeb3) {\n        window.web3.eth.getCoinbase(function (error, coinbase) {\n          if (false) {\n            console.log(error);\n          } else {\n            var token = _this2.state.TeacheCoin.token;\n            token.balanceOf(coinbase, function (error, response) {\n              if (!error) {\n                var balance = response.c[0] / 10000;\n                balance = balance >= 0 ? balance : 0;\n\n                _this2.setState({\n                  TeacheCoin: _objectSpread({}, _this2.state.TeacheCoin, {\n                    balance: balance,\n                    symbol: TeacheCoin.symbol,\n                    decimal: '1e' + TeacheCoin.decimal\n                  })\n                }, function () {\n                  console.log(_this2.state);\n                });\n              }\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"checkWeb3Compatibility\",\n    value: function checkWeb3Compatibility() {\n      var _this3 = this;\n\n      if (window.web3) {\n        this.isWeb3 = true;\n        window.web3.eth.getCoinbase(function (error, coinbase) {\n          if (error || coinbase === null) {\n            _this3.isWeb3Locked = true;\n          } else {\n            _this3.isWeb3Locked = false;\n\n            _this3.setState({\n              TeacheCoin: _objectSpread({}, _this3.state.TeacheCoin, {\n                account: coinbase,\n                token: window.web3.eth.contract(TeacheCoin.abi).at(TeacheCoin.address)\n              })\n            }, function () {\n              _this3.loadBalance();\n            });\n          }\n        });\n      } else {\n        this.isWeb3 = false;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      window.addEventListener('load', this.checkWeb3Compatibility);\n\n      if (window.web3) {\n        window.web3.currentProvider.publicConfigStore.on('update', function () {\n          _this4.checkWeb3Compatibility();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      var w = window.innerWidth;\n      this.setState({\n        width: w,\n        isCollapsed: w <= 960\n      });\n    }\n  }, {\n    key: \"handleImageSend\",\n    value: function handleImageSend(image) {\n      var _this5 = this;\n\n      if (image) {\n        var id_conv = this.state.activeConversation;\n        var id_sender = this.state.userID;\n        fileService.upload(id_conv, image).then(function (path) {\n          var imageLink = 'localhost:8080/api/images?path=' + path;\n          var message = '<input type=\"image\" src=\"' + imageLink + '\" />';\n\n          _this5.sendMessage(id_conv, id_sender, message);\n        });\n      }\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      var message = this.state.inputMessage;\n      console.log(\"Sending message: \".concat(message));\n\n      if (message) {\n        var id_conv = this.state.activeConversation;\n        var id_sender = this.state.userID;\n        this.sendMessage(id_conv, id_sender, message);\n      }\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(id_conv, id_sender, message) {\n      this.props.sendMessageGql({\n        variables: {\n          content: message,\n          id_conv: id_conv,\n          id_sender: id_sender\n        }\n      });\n      this.setState(function (prevState) {\n        prevState.inputMessage = '';\n        return prevState;\n      });\n    }\n  }, {\n    key: \"getGroups\",\n    value: function getGroups() {\n      var _this6 = this;\n\n      return React.createElement(Query, {\n        query: GET_ME,\n        variables: {\n          nickname: this.state.nickname\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return \"Loading...\";\n        if (error) return \"Error! \".concat(error);\n        return data.me.conversations.map(function (conv, index) {\n          return React.createElement(ChatGroup, {\n            key: index,\n            id: conv.id,\n            url: conv.avatarUrl,\n            name: conv.name,\n            handleClick: _this6.groupChanged,\n            active: conv.id === _this6.state.activeConversation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, _this6.onNewData(conv.ethWallet, conv.name));\n        });\n      });\n    }\n  }, {\n    key: \"handleChangeInput\",\n    value: function handleChangeInput(event) {\n      var value = event.target.value;\n      this.setState({\n        inputMessage: value\n      });\n      console.log(\"input\");\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var _this7 = this;\n\n      var activeConversation = this.state.activeConversation;\n\n      if (activeConversation !== 0) {\n        return React.createElement(Query, {\n          query: getConversationGql,\n          variables: {\n            activeConversation: activeConversation\n          },\n          pollInterval: 100,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, function (_ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error,\n              data = _ref2.data;\n          if (loading) return 'Loading...';\n          if (error) return \"Error! \".concat(error);\n          console.log(\"data\");\n          console.log(data);\n          return data.conversation.messages.map(function (message, index) {\n            return React.createElement(Message, {\n              key: index,\n              model: message,\n              isActive: message.sender.id === _this7.state.userID,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 310\n              },\n              __self: this\n            });\n          });\n        });\n      } else {\n        return \"No conversation\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var _this$state = this.state,\n          userID = _this$state.userID,\n          activeConversation = _this$state.activeConversation,\n          isCollapsed = _this$state.isCollapsed,\n          mainItemActive = _this$state.mainItemActive,\n          inputMessage = _this$state.inputMessage;\n      console.log(\"this.props\");\n      console.log(this.props);\n      var groupsCompList = this.getGroups();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark navbar-expand-lg sticky-top\",\n        style: {\n          backgroundColor: 'rgb(46, 21, 27)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          backgroundColor: 'Transparent',\n          border: 'Transparent'\n        },\n        onClick: function onClick(event) {\n          _this8.openMainItem();\n\n          event.preventDefault();\n        },\n        className: \"flat navbar-brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Teache\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"navbar-toggler collapsed\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarCollapse\",\n        \"aria-expanded\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarCollapse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/account\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Account\")), React.createElement(\"li\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/settings\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Settings\")), React.createElement(\"li\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, localStorage.getItem(TOKEN_SPRING) ? React.createElement(NavLink, {\n        to: \"/logout\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Logout\") : React.createElement(NavLink, {\n        to: \"/login\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Login\"))))), React.createElement(Container, {\n        style: isCollapsed ? styleOptCollapsed : styleOptUnCollapsed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(GroupsComponent, {\n        mainItemActive: mainItemActive,\n        openMainItem: this.openMainItem,\n        list: groupsCompList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }), this.state.mainItemActive ? React.createElement(AdvertsComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }) : React.createElement(ChatComponent, {\n        handleOver: this.showDetails,\n        userId: userID,\n        onSendToken: this.handleTokenTransfer,\n        conversationID: this.state.activeConversation // messages={messagesList}\n        ,\n        inputMessage: inputMessage,\n        onChange: function onChange(event) {\n          return _this8.handleChangeInput(event);\n        },\n        onKeyPress: this.handleKeyPress,\n        onClick: function onClick() {\n          return _this8.handleSend();\n        },\n        sendImage: function sendImage(image) {\n          return _this8.handleImageSend(image);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), !isCollapsed ? React.createElement(DetailsComponent, {\n        isMainActive: this.state.mainItemActive,\n        activeConv: activeConversation,\n        userId: userID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }) : null), this.isWeb3 && !this.isWeb3Locked ? React.createElement(Balance, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Balance: \", this.state.TeacheCoin.balance + \" \" + this.state.TeacheCoin.symbol, \" \") : null, React.createElement(InstallMetamask, {\n        close: this.closeDialogs,\n        show: this.state.modalDialogs.installMetamaskVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), React.createElement(UnlockMetamask, {\n        close: this.closeDialogs,\n        show: this.state.modalDialogs.unlockMetamaskVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }), this.isWeb3 && !this.isWeb3Locked ? React.createElement(TokenTransferForm, {\n        teacheCoin: this.state.TeacheCoin,\n        activeConv: activeConversation,\n        show: this.state.modalDialogs.transferFormVisible,\n        close: this.closeDialogs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nfunction mapStateToProps(state) {// const {conversations, groups} = state.chatReducer;\n  // const {adverts} = state.advertReducer;\n  // return {conversations, groups, adverts};\n  // return { adverts };\n}\n\nexport default compose( // graphql(getConversationGql, {\n//     options: (props) => ({\n//         variables: {\n//             activeConversation: props.activeConversation\n//         }\n//     })\n// }),\ngraphql(SEND_MESSAGE_GQL, {\n  name: 'sendMessageGql'\n}))(MainPage); // export default MainPage = connect(mapStateToProps)(MainPage);","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/MainPage.js"],"names":["React","Component","ChatGroup","bgPic","Message","connect","GroupsComponent","ChatComponent","styled","DetailsComponent","Messages","Mutation","Query","graphql","compose","gql","AdvertsComponent","SEND_MESSAGE_GQL","getConversationGql","GET_ME","InstallMetamask","UnlockMetamask","TokenTransferForm","TeacheCoin","NavLink","TOKEN_SPRING","fileService","Container","div","styleOptCollapsed","gridTemplateColumns","gridTemplateRows","styleOptUnCollapsed","Balance","MainPage","props","closeDialogs","setState","modalDialogs","installMetamaskVisible","unlockMetamaskVisible","transferFormVisible","handleTokenTransfer","installMetamask","unlockMetamask","transferForm","isWeb3","isWeb3Locked","handleKeyPress","event","key","handleSend","openMainItem","mainItemActive","activeConversation","console","log","groupChanged","id","showDetails","findActive","conversation","state","onNewData","wallet","activeEthWallet","inputMessage","width","isCollapsed","userID","nickname","updateWindowDimensions","bind","loadBalance","checkWeb3Compatibility","window","web3","eth","getCoinbase","error","coinbase","token","balanceOf","response","balance","c","symbol","decimal","account","contract","abi","at","address","addEventListener","currentProvider","publicConfigStore","on","removeEventListener","w","innerWidth","image","id_conv","id_sender","upload","then","path","imageLink","message","sendMessage","sendMessageGql","variables","content","prevState","loading","data","me","conversations","map","conv","index","avatarUrl","name","ethWallet","value","target","messages","sender","groupsCompList","getGroups","backgroundColor","border","preventDefault","localStorage","getItem","handleChangeInput","handleImageSend","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport ChatGroup from './ChatGroup'\nimport bgPic from \"../assets/mntnFHD_compressed_cut.jpeg\";\nimport Message from './Message'\n\nimport {connect} from \"react-redux\";\nimport GroupsComponent from \"./GroupsComponent\";\nimport ChatComponent from \"./ChatComponent\";\nimport styled from 'styled-components'\nimport DetailsComponent from \"./DetailsComponent\";\nimport '../styles/mainPage.scss'\nimport {Messages} from \"../data/Messages\";\nimport {Mutation, Query, graphql, compose} from 'react-apollo'\nimport gql from 'graphql-tag'\nimport AdvertsComponent from \"./AdvertsComponent\";\nimport {SEND_MESSAGE_GQL, getConversationGql, GET_ME} from \"../queries/gql\"\n\nimport {InstallMetamask, UnlockMetamask, TokenTransferForm} from \"./Metamask\"\n\nimport TeacheCoin from \"../tokens/TeacheCoin\";\nimport {NavLink} from \"react-router-dom\";\nimport {TOKEN_SPRING} from \"../constraints\";\n\nimport { fileService } from \"../service/fileService\";\n\nconst Container = styled.div`\n    position: absolute;\n    top: 10%;\n    left: 50%;\n    width: 90vw;\n    height: 90vh;\n    transform: translate(-50%);\n    display: grid;\n    grid-gap: 4px;`;\n\nconst styleOptCollapsed = {\n    gridTemplateColumns: '230px auto',\n    gridTemplateRows: '95%',\n};\n\nconst styleOptUnCollapsed = {\n    gridTemplateColumns: '230px auto 320px',\n    gridTemplateRows: '95%',\n};\n\nconst Balance = styled.div`\n    position: absolute;\n    font-size: 1.5em;\n    right: 5vw;\n    top: 1vh;\n    text-align: right;\n`\n\nclass MainPage extends Component {\n\n    constructor(props) {\n        super(props);\n        // const {conversations, groups} = this.props;\n\n        this.state = {\n            inputMessage: '',\n            activeConversation: 0,\n            mainItemActive: true,\n            width: 0,\n            isCollapsed: false,\n            userID: '5ca1c9a11c9d4400003e3590',\n            nickname: \"Monteth\",\n            modalDialogs: {\n                installMetamaskVisible: false,\n                unlockMetamaskVisible: false,\n                transferFormVisible: false\n            }\n        };\n\n        this.isWeb3 = false;\n        this.isWeb3Locked = false;\n\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.loadBalance = this.loadBalance.bind(this)\n        this.checkWeb3Compatibility = this.checkWeb3Compatibility.bind(this)\n    }\n\n    loadBalance() {\n        if (this.isWeb3) {\n            window.web3.eth.getCoinbase((error, coinbase) => {\n                if (false) {\n                    console.log(error)\n                } else {\n                    let token = this.state.TeacheCoin.token\n                    token.balanceOf(coinbase, (error, response) => {\n                        if (!error) {\n                            let balance = response.c[0] / 10000\n                            balance = balance >= 0 ? balance : 0\n\n                            this.setState({\n                                TeacheCoin: {\n                                    ...this.state.TeacheCoin,\n                                    balance: balance,\n                                    symbol: TeacheCoin.symbol,\n                                    decimal: '1e' + TeacheCoin.decimal\n                                }\n                            }, () => {\n                                console.log(this.state)\n                            })\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    checkWeb3Compatibility() {\n        if (window.web3) {\n            this.isWeb3 = true;\n            window.web3.eth.getCoinbase((error, coinbase) => {\n                if (error || coinbase === null) {\n                    this.isWeb3Locked = true;\n                } else {\n                    this.isWeb3Locked = false;\n                    this.setState({\n                        TeacheCoin: {\n                            ...this.state.TeacheCoin,\n                            account: coinbase,\n                            token: window.web3.eth.contract(TeacheCoin.abi).at(TeacheCoin.address)\n                        }\n                    }, () => {\n                        this.loadBalance()\n                    })\n                }\n            })\n        } else {\n            this.isWeb3 = false;\n        }\n    }\n\n    closeDialogs = () => {\n        this.setState({\n            modalDialogs: {\n                installMetamaskVisible: false,\n                unlockMetamaskVisible: false,\n                transferFormVisible: false\n            }\n        })\n    }\n\n    handleTokenTransfer = () => {\n        let installMetamask = false\n        let unlockMetamask = false\n        let transferForm = false\n\n        if (!this.isWeb3) {\n            installMetamask = true\n        } else if (this.isWeb3Locked) {\n            unlockMetamask = true\n        } else {\n            transferForm = true\n        }\n\n        this.setState({\n            modalDialogs: {\n                installMetamaskVisible: installMetamask,\n                unlockMetamaskVisible: unlockMetamask,\n                transferFormVisible: transferForm\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions)\n        window.addEventListener('load', this.checkWeb3Compatibility)\n\n        if (window.web3) {\n            window.web3.currentProvider.publicConfigStore.on('update', () => {\n                this.checkWeb3Compatibility()\n            })\n        }\n    }\n\n    componentWillMount() {\n        window.removeEventListener('resize', this.updateWindowDimensions)\n    }\n\n    updateWindowDimensions() {\n        const w = window.innerWidth;\n        this.setState({\n            width: w,\n            isCollapsed: w <= 960\n        });\n    }\n\n    handleImageSend(image) {\n        if (image) {\n            const id_conv = this.state.activeConversation;\n            const id_sender = this.state.userID;\n\n            fileService.upload(id_conv, image).then(path => {\n                const imageLink = 'localhost:8080/api/images?path=' + path;\n                const message = '<input type=\"image\" src=\"' + imageLink + '\" />'\n                \n                this.sendMessage(id_conv, id_sender, message);\n            })\n        }\n    }\n\n    handleSend() {\n        const message = this.state.inputMessage;\n        console.log(`Sending message: ${message}`);\n        if (message) {\n            const id_conv = this.state.activeConversation;\n            const id_sender = this.state.userID;\n\n            this.sendMessage(id_conv, id_sender, message);\n        }\n    }\n\n    sendMessage(id_conv, id_sender, message) {\n        this.props.sendMessageGql({\n            variables: {\n                content: message,\n                id_conv: id_conv,\n                id_sender: id_sender\n            }\n        });\n        this.setState(prevState => {\n            prevState.inputMessage = '';\n            return prevState\n        });\n    }\n\n    getGroups() {\n        return <Query query={GET_ME} variables={{nickname: this.state.nickname}}>\n            {({loading, error, data}) => {\n                if (loading) return `Loading...`;\n                if (error) return `Error! ${error}`;\n\n                return data.me.conversations.map((conv, index) =>\n                    <ChatGroup\n                        key={index}\n                        id={conv.id}\n                        url={conv.avatarUrl}\n                        name={conv.name}\n                        handleClick={this.groupChanged}\n                        active={conv.id === this.state.activeConversation}>\n                        {this.onNewData(conv.ethWallet, conv.name)}\n                    </ChatGroup>);\n            }}\n        </Query>\n    };\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.handleSend();\n        }\n    };\n\n    handleChangeInput(event) {\n        const {value} = event.target;\n        this.setState({\n            inputMessage: value\n        });\n        console.log(\"input\")\n    }\n\n    openMainItem = () => {\n        this.setState({\n            mainItemActive: true,\n            activeConversation: null\n        });\n        console.log(\"Open Main Item\")\n    };\n\n\n    groupChanged = (id) => {\n        console.log(\"group changed: \", id);\n        this.setState({\n            activeConversation: id,\n            mainItemActive: false\n        });\n    };\n\n    showDetails = (id) => {\n        console.log(id);\n    };\n\n    findActive = (conversation) => {\n        const {activeConversation} = this.state;\n        return conversation.id === activeConversation\n    };\n\n    onNewData = (wallet) => {\n        if (this.state.wallet !== this.state.activeEthWallet) {\n            this.setState({\n                activeEthWallet: wallet,\n            })\n            console.log(`active wallet: ${wallet}`)\n        }\n    }\n\n    getMessages() {\n        const activeConversation = this.state.activeConversation;\n        if (activeConversation !== 0) {\n            return (<Query query={getConversationGql} variables={{activeConversation}} pollInterval={100}>\n                {({loading, error, data}) => {\n                    if (loading) return 'Loading...';\n                    if (error) return `Error! ${error}`;\n                    console.log(\"data\");\n                    console.log(data);\n                    return data.conversation.messages.map((message, index) =>\n                        <Message\n                            key={index}\n                            model={message}\n                            isActive={message.sender.id === this.state.userID}>\n                        </Message>);\n                }}\n            </Query>)\n        } else {\n            return \"No conversation\"\n        }\n    }\n\n    render() {\n        const {\n            userID,\n            activeConversation,\n            isCollapsed,\n            mainItemActive,\n            inputMessage,\n        } = this.state;\n\n        console.log(\"this.props\");\n        console.log(this.props);\n\n\n        const groupsCompList = this.getGroups();\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-dark navbar-expand-lg sticky-top\"\n                     style={{backgroundColor: 'rgb(46, 21, 27)'}}>\n\n                        <button style={{backgroundColor: 'Transparent', border: 'Transparent'}} onClick={(event) => {this.openMainItem(); event.preventDefault()}}\n                                className=\"flat navbar-brand\">Teache\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"navbar-toggler collapsed\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarCollapse\"\n                            aria-expanded=\"false\">\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"navbar-item\">\n                                    <NavLink to=\"/account\" className=\"nav-link\">Account</NavLink>\n                                </li>\n                                <li className=\"navbar-item\">\n                                    <NavLink to=\"/settings\" className=\"nav-link\">Settings</NavLink>\n                                </li>\n                                <li className=\"navbar-item\">\n                                    {localStorage.getItem(TOKEN_SPRING) ?\n                                        <NavLink to=\"/logout\" className=\"nav-link\">Logout</NavLink> :\n                                        <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink>}\n                                </li>\n                            </ul>\n                        </div>\n                </nav>\n                <Container\n                    style={isCollapsed ? styleOptCollapsed : styleOptUnCollapsed}>\n                    <GroupsComponent\n                        mainItemActive={mainItemActive}\n                        openMainItem={this.openMainItem}\n                        list={groupsCompList}/>\n                    {this.state.mainItemActive\n                        ? <AdvertsComponent/>\n                        : <ChatComponent\n                            handleOver={this.showDetails}\n                            userId={userID}\n                            onSendToken={this.handleTokenTransfer}\n                            conversationID={this.state.activeConversation}\n                            // messages={messagesList}\n                            inputMessage={inputMessage}\n                            onChange={event => this.handleChangeInput(event)}\n                            onKeyPress={this.handleKeyPress}\n                            onClick={() => this.handleSend()}\n                            sendImage={(image) => this.handleImageSend(image)}/>\n                    }\n                    {!isCollapsed ?\n                        <DetailsComponent\n                            isMainActive={this.state.mainItemActive}\n                            activeConv={activeConversation}\n                            userId={userID}\n                        /> : null}\n                </Container>\n\n                {this.isWeb3 && !this.isWeb3Locked\n                    ? <Balance>Balance: {this.state.TeacheCoin.balance + \" \" + this.state.TeacheCoin.symbol} </Balance>\n                    : null}\n\n                <InstallMetamask close={this.closeDialogs} show={this.state.modalDialogs.installMetamaskVisible}/>\n                <UnlockMetamask close={this.closeDialogs} show={this.state.modalDialogs.unlockMetamaskVisible}/>\n\n                {this.isWeb3 && !this.isWeb3Locked\n                    ? <TokenTransferForm\n                        teacheCoin={this.state.TeacheCoin}\n                        activeConv={activeConversation}\n                        show={this.state.modalDialogs.transferFormVisible}\n                        close={this.closeDialogs}/>\n                    : null}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    // const {conversations, groups} = state.chatReducer;\n    // const {adverts} = state.advertReducer;\n    // return {conversations, groups, adverts};\n    // return { adverts };\n}\n\nexport default compose(\n    // graphql(getConversationGql, {\n    //     options: (props) => ({\n    //         variables: {\n    //             activeConversation: props.activeConversation\n    //         }\n    //     })\n    // }),\n    graphql(SEND_MESSAGE_GQL, {name: 'sendMessageGql'})\n)(MainPage);\n\n// export default MainPage = connect(mapStateToProps)(MainPage);\n"]},"metadata":{},"sourceType":"module"}