{"ast":null,"code":"import { TOKEN_EXPRESS, TOKEN_SPRING } from \"../constraints\";\nimport Alert from \"react-s-alert\";\nimport { restConstants } from \"../constraints/restConstants\";\nexport var userService = {\n  login: login,\n  logout: logout\n};\n\nfunction login(email, password) {\n  var body = {\n    email: email,\n    password: password\n  };\n  return function (dispatch) {\n    fetch(\"http://localhost:8080/api/auth/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(function (data) {\n      return data.json();\n    }).then(function (response) {\n      console.log('UserService login: ');\n      console.log(response);\n      localStorage.setItem(TOKEN_SPRING, response.accessToken);\n      return dispatch(getUserInfo(email, password));\n    });\n  };\n}\n\nfunction register(name, email, password) {\n  var body = {\n    name: name,\n    email: email,\n    password: password\n  };\n  return function (dispatch) {\n    fetch(\"http://localhost:8080/api/auth/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(function (data) {\n      return data.json();\n    }).then(function (response) {\n      console.log('UserService register: ');\n      console.log(response);\n    });\n  };\n}\n\nfunction getUserInfo(email, password) {\n  console.log(\"getUserInfo fired!\");\n  var user = {};\n  console.log(\"getUserInfo return started!\");\n  return function (dispatch) {\n    fetch('http://localhost:8080/api/user/me', {\n      method: 'get',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + localStorage.getItem(TOKEN_SPRING)\n      }\n    }).then(function (data) {\n      return data.json();\n    }).then(function (response) {\n      console.log('UserService getUserInfo: ', response);\n      user = {\n        type: restConstants.GET_USER_DATA,\n        id: response.id,\n        username: response.name,\n        email: \"XD\" // dispatch({\n        //     type: restConstants.GET_USER_DATA,\n        //     id: response.id,\n        //     username: response.name,\n        //     email: \"XD\"\n        // })\n\n      };\n    }).then(fetch('http://localhost:4000/graphql', {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: \"{\\n    \\\"query\\\": \\\"query {login(email: \\\\\\\"\".concat(email, \"\\\\\\\", password: \\\\\\\"\").concat(password, \"\\\\\\\"){token userId}}\\\"\\n}\")\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"GQL Login response\");\n      console.log(data.data.login.token);\n      console.log(data.data.login.userId); // response = response.json();\n\n      localStorage.setItem(TOKEN_EXPRESS, data.data.login.token);\n      dispatch({\n        type: restConstants.GET_USER_DATA,\n        id: user.id,\n        username: user.name,\n        email: user.email,\n        idExpress: data.data.login.userId\n      });\n    }));\n  };\n}\n\nfunction logout() {\n  localStorage.removeItem(TOKEN_SPRING);\n  localStorage.removeItem(TOKEN_EXPRESS);\n  localStorage.removeItem('token');\n  localStorage.removeItem('username');\n}","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/service/userService.js"],"names":["TOKEN_EXPRESS","TOKEN_SPRING","Alert","restConstants","userService","login","logout","email","password","body","dispatch","fetch","method","headers","JSON","stringify","then","data","json","response","console","log","localStorage","setItem","accessToken","getUserInfo","register","name","user","getItem","type","GET_USER_DATA","id","username","token","userId","idExpress","removeItem"],"mappings":"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","sourcesContent":["import {TOKEN_EXPRESS, TOKEN_SPRING} from \"../constraints\";\nimport Alert from \"react-s-alert\";\nimport {restConstants} from \"../constraints/restConstants\";\n\nexport const userService = {\n    login,\n    logout\n};\n\nfunction login(email, password) {\n    const body = {\n        email: email,\n        password: password\n    };\n    return dispatch => {\n        fetch(\"http://localhost:8080/api/auth/login\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n            .then(data => data.json())\n            .then(response => {\n                console.log('UserService login: ');\n                console.log(response);\n                localStorage.setItem(TOKEN_SPRING, response.accessToken);\n                return dispatch(getUserInfo(email, password))\n            });\n    };\n}\n\nfunction register(name, email, password) {\n    const body = {\n        name: name,\n        email: email,\n        password: password\n    };\n    return dispatch => {\n        fetch(\"http://localhost:8080/api/auth/signup\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n            .then(data => data.json())\n            .then(response => {\n                console.log('UserService register: ');\n                console.log(response);\n            });\n    };\n}\n\nfunction getUserInfo(email, password) {\n    console.log(\"getUserInfo fired!\");\n\n    let user = {};\n    console.log(\"getUserInfo return started!\");\n    return dispatch => {\n        fetch('http://localhost:8080/api/user/me', {\n            method: 'get',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': 'Bearer ' + localStorage.getItem(TOKEN_SPRING)\n            }\n        })\n            .then(data => data.json())\n            .then(response => {\n                console.log('UserService getUserInfo: ', response);\n                user = {\n                    type: restConstants.GET_USER_DATA,\n                    id: response.id,\n                    username: response.name,\n                    email: \"XD\"\n                }\n                // dispatch({\n                //     type: restConstants.GET_USER_DATA,\n                //     id: response.id,\n                //     username: response.name,\n                //     email: \"XD\"\n                // })\n            }).then(fetch('http://localhost:4000/graphql', {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: `{\n    \"query\": \"query {login(email: \\\\\"${email}\\\\\", password: \\\\\"${password}\\\\\"){token userId}}\"\n}`,\n        }).then(response => response.json())\n            .then(data => {\n                console.log(\"GQL Login response\");\n                console.log(data.data.login.token);\n                console.log(data.data.login.userId);\n                // response = response.json();\n                localStorage.setItem(TOKEN_EXPRESS, data.data.login.token);\n                dispatch({\n                    type: restConstants.GET_USER_DATA,\n                    id: user.id,\n                    username: user.name,\n                    email: user.email,\n                    idExpress: data.data.login.userId\n                })\n            }))\n    }\n}\n\nfunction logout() {\n    localStorage.removeItem(TOKEN_SPRING);\n    localStorage.removeItem(TOKEN_EXPRESS);\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n\n}\n"]},"metadata":{},"sourceType":"module"}