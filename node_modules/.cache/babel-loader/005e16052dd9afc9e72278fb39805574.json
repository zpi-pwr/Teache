{"ast":null,"code":"import { ACCESS_TOKEN } from \"../constraints\";\nimport Alert from \"react-s-alert\";\nimport { restConstants } from \"../constraints/restConstants\";\nexport var userService = {\n  login: login,\n  logout: logout\n};\n\nfunction login(email, password) {\n  var body = {\n    email: email,\n    password: password\n  };\n  return function (dispatch) {\n    fetch(\"http://localhost:8080/auth/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(function (data) {\n      return data.json();\n    }).then(function (response) {\n      console.log('UserService login: ');\n      console.log(response);\n      localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n      return dispatch(getUserInfo());\n    });\n  };\n}\n\nfunction getUserInfo() {\n  console.log(\"getUserInfo fired!\");\n  console.log(\"getUserInfo return started!\");\n  return function (dispatch) {\n    fetch('http://localhost:8080/user/me', {\n      method: 'get',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n      }\n    }).then(function (data) {\n      return data.json();\n    }).then(function (response) {\n      console.log('UserService getUserInfo: ', response);\n      dispatch({\n        type: restConstants.GET_USER_DATA,\n        id: response.id,\n        username: response.name,\n        email: \"XD\"\n      });\n    });\n  };\n}\n\nfunction logout() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('username');\n}","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/service/userService.js"],"names":["ACCESS_TOKEN","Alert","restConstants","userService","login","logout","email","password","body","dispatch","fetch","method","headers","JSON","stringify","then","data","json","response","console","log","localStorage","setItem","accessToken","getUserInfo","getItem","type","GET_USER_DATA","id","username","name","removeItem"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,gBAA3B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA;AAFuB,CAApB;;AAKP,SAASD,KAAT,CAAeE,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,MAAMC,IAAI,GAAG;AACTF,IAAAA,KAAK,EAAEA,KADE;AAETC,IAAAA,QAAQ,EAAEA;AAFD,GAAb;AAIA,SAAO,UAAAE,QAAQ,EAAI;AACfC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF6B;AAKtCJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALgC,KAArC,CAAL,CAOKO,IAPL,CAOU,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,KAPd,EAQKF,IARL,CAQU,UAAAG,QAAQ,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqBtB,YAArB,EAAmCkB,QAAQ,CAACK,WAA5C;AACA,aAAOd,QAAQ,CAACe,WAAW,EAAZ,CAAf;AACH,KAbL;AAcH,GAfD;AAgBH;;AAED,SAASA,WAAT,GAAuB;AACnBL,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAGAD,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,SAAO,UAAAX,QAAQ,EAAI;AACfC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,MAAAA,MAAM,EAAE,KAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,YAAYS,YAAY,CAACI,OAAb,CAAqBzB,YAArB;AAFxB;AAF0B,KAAlC,CAAL,CAOKe,IAPL,CAOU,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,KAPd,EAQKF,IARL,CAQU,UAAAG,QAAQ,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,QAAzC;AACAT,MAAAA,QAAQ,CAAC;AACLiB,QAAAA,IAAI,EAAExB,aAAa,CAACyB,aADf;AAELC,QAAAA,EAAE,EAAEV,QAAQ,CAACU,EAFR;AAGLC,QAAAA,QAAQ,EAAEX,QAAQ,CAACY,IAHd;AAILxB,QAAAA,KAAK,EAAE;AAJF,OAAD,CAAR;AAMH,KAhBL;AAiBH,GAlBD;AAmBH;;AAED,SAASD,MAAT,GAAkB;AACdgB,EAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACH","sourcesContent":["import {ACCESS_TOKEN} from \"../constraints\";\nimport Alert from \"react-s-alert\";\nimport {restConstants} from \"../constraints/restConstants\";\n\nexport const userService = {\n    login,\n    logout\n};\n\nfunction login(email, password) {\n    const body = {\n        email: email,\n        password: password\n    };\n    return dispatch => {\n        fetch(\"http://localhost:8080/auth/login\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n            .then(data => data.json())\n            .then(response => {\n                console.log('UserService login: ');\n                console.log(response);\n                localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                return dispatch(getUserInfo())\n            });\n    };\n}\n\nfunction getUserInfo() {\n    console.log(\"getUserInfo fired!\");\n\n\n    console.log(\"getUserInfo return started!\");\n    return dispatch => {\n        fetch('http://localhost:8080/user/me', {\n            method: 'get',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n            }\n        })\n            .then(data => data.json())\n            .then(response => {\n                console.log('UserService getUserInfo: ', response);\n                dispatch({\n                    type: restConstants.GET_USER_DATA,\n                    id: response.id,\n                    username: response.name,\n                    email: \"XD\"\n                })\n            })\n    }\n}\n\nfunction logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n}\n"]},"metadata":{},"sourceType":"module"}