{"ast":null,"code":"import _classCallCheck from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/MainPage.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 10%;\\n    left: 50%;\\n    width: 90%;\\n    height: 800px;\\n    transform: translate(-50%);\\n    display: grid;\\n    grid-gap: 10px;\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 910px;\\n    background-image: url(\", \")\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport ChatGroup from './ChatGroup';\nimport bgPic from \"../assets/mntnFHD_compressed_cut.jpeg\";\nimport Message from './Message';\nimport SockJsClient from 'react-stomp';\nimport { connect } from \"react-redux\";\nimport GroupsComponent from \"./GroupsComponent\";\nimport ChatComponent from \"./ChatComponent\";\nimport styled from 'styled-components';\nimport { DetailsComponent } from \"./DetailsComponent\";\nvar Page = styled.div(_templateObject(), bgPic);\nvar Container = styled.div(_templateObject2());\nvar styleOptCollapsed = {\n  gridTemplateColumns: '72px auto'\n};\nvar styleOptUnCollapsed = {\n  gridTemplateColumns: '72px auto 320px'\n};\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.handleKeyPress = function (event) {\n      if (event.key === 'Enter') {\n        _this.handleSend();\n      }\n    };\n\n    _this.openMainItem = function () {\n      _this.setState({\n        mainItemActive: true,\n        activeConversation: null\n      });\n\n      console.log(\"Open Main Item\");\n    };\n\n    _this.groupChanged = function (id) {\n      console.log(\"group changed: \", id); // const conv = this.props.onConversationChange(id);\n\n      _this.setState({\n        activeConversation: id,\n        mainItemActive: false\n      }); // this.props.onConversationChange(id)\n\n    };\n\n    _this.showDetails = function (id) {\n      console.log(id);\n    };\n\n    _this.state = {\n      inputMessage: '',\n      activeConversation: 0,\n      conversations: _this.props.activeConversation,\n      groups: _this.props.groups,\n      mainItemActive: false,\n      width: 0,\n      isCollapsed: false,\n      userID: 154 // stompClient: new SockJsClient('/ws')\n\n    };\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"connectToChat\",\n    value: function connectToChat(event) {\n      var username = 'Monteth';\n    }\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      var w = window.innerWidth;\n      this.setState({\n        width: w\n      });\n      this.state.isCollapsed = w <= 960;\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      if (this.state.inputMessage) {\n        console.log('send message');\n        this.setState(function (prevState) {\n          prevState.inputMessage = '';\n          return prevState;\n        });\n      }\n    }\n  }, {\n    key: \"handleChangeInput\",\n    value: function handleChangeInput(event) {\n      var value = event.target.value;\n      this.setState({\n        inputMessage: value\n      });\n      console.log(\"input\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messagesList = this.state.conversations[0].messages.map(function (message) {\n        return React.createElement(Message, {\n          message: message.inputMessage,\n          id: message.id,\n          key: message.id,\n          handleOver: _this2.showDetails,\n          isActive: message.id_sender === _this2.state.userID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      });\n      var groupsCompList = this.state.groups.map(function (chat) {\n        return React.createElement(ChatGroup, {\n          key: chat.id,\n          id: chat.id,\n          url: chat.avatar,\n          onClick: _this2.groupChanged,\n          active: chat.id === _this2.state.activeConversation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: this.state.isCollapsed ? styleOptCollapsed : styleOptUnCollapsed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(GroupsComponent, {\n        mainItemActive: this.state.mainItemActive,\n        openMainItem: this.openMainItem,\n        list: groupsCompList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(ChatComponent, {\n        conversationName: this.state.conversations[0].name,\n        messages: messagesList,\n        inputMessage: this.state.inputMessage,\n        onChange: function onChange(event) {\n          return _this2.handleChangeInput(event);\n        },\n        onKeyPress: this.handleKeyPress,\n        onClick: function onClick() {\n          return _this2.handleSend();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), !this.state.isCollapsed ? React.createElement(DetailsComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$chatReducer = state.chatReducer,\n      activeConversation = _state$chatReducer.activeConversation,\n      groups = _state$chatReducer.groups; // console.log(`state ${state.chatReducer}`);\n  // console.log(state.chatReducer.activeConversation);\n  // console.log(state.chatReducer.groups);\n\n  return {\n    activeConversation: activeConversation,\n    groups: groups\n  };\n}\n\nexport default MainPage = connect(mapStateToProps)(MainPage);","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/frontend/src/components/MainPage.js"],"names":["React","Component","ChatGroup","bgPic","Message","SockJsClient","connect","GroupsComponent","ChatComponent","styled","DetailsComponent","Page","div","Container","styleOptCollapsed","gridTemplateColumns","styleOptUnCollapsed","MainPage","props","handleKeyPress","event","key","handleSend","openMainItem","setState","mainItemActive","activeConversation","console","log","groupChanged","id","showDetails","state","inputMessage","conversations","groups","width","isCollapsed","userID","updateWindowDimensions","bind","window","addEventListener","removeEventListener","username","w","innerWidth","prevState","value","target","messagesList","messages","map","message","id_sender","groupsCompList","chat","avatar","name","handleChangeInput","mapStateToProps","chatReducer"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport ChatGroup from './ChatGroup'\nimport bgPic from \"../assets/mntnFHD_compressed_cut.jpeg\";\nimport Message from './Message'\n\nimport SockJsClient from 'react-stomp'\nimport {connect} from \"react-redux\";\nimport GroupsComponent from \"./GroupsComponent\";\nimport ChatComponent from \"./ChatComponent\";\nimport styled from 'styled-components'\nimport {DetailsComponent} from \"./DetailsComponent\";\n\nconst Page = styled.div`\n    width: 100%;\n    height: 910px;\n    background-image: url(${bgPic})`;\n\nconst Container = styled.div`\n    position: absolute;\n    top: 10%;\n    left: 50%;\n    width: 90%;\n    height: 800px;\n    transform: translate(-50%);\n    display: grid;\n    grid-gap: 10px;`;\n\nconst styleOptCollapsed = {\n    gridTemplateColumns: '72px auto',\n};\n\nconst styleOptUnCollapsed = {\n    gridTemplateColumns: '72px auto 320px',\n};\n\nclass MainPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputMessage: '',\n            activeConversation: 0,\n            conversations: this.props.activeConversation,\n            groups: this.props.groups,\n            mainItemActive: false,\n            width: 0,\n            isCollapsed: false,\n            userID: 154,\n            // stompClient: new SockJsClient('/ws')\n\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions)\n    }\n\n    componentWillMount() {\n        window.removeEventListener('resize', this.updateWindowDimensions)\n    }\n\n    connectToChat(event) {\n        let username = 'Monteth';\n    }\n\n    updateWindowDimensions() {\n        const w = window.innerWidth;\n        this.setState({width: w});\n        this.state.isCollapsed = w <= 960;\n    }\n\n    handleSend() {\n        if (this.state.inputMessage) {\n            console.log('send message')\n            this.setState(prevState => {\n                prevState.inputMessage = '';\n                return prevState\n            });\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.handleSend();\n        }\n    };\n\n    handleChangeInput(event) {\n        const {value} = event.target;\n        this.setState({\n            inputMessage: value\n        });\n        console.log(\"input\")\n    }\n\n    openMainItem = () => {\n        this.setState({mainItemActive: true, activeConversation: null});\n        console.log(\"Open Main Item\")\n    };\n\n\n    groupChanged = (id) => {\n        console.log(\"group changed: \", id);\n        // const conv = this.props.onConversationChange(id);\n        this.setState({\n            activeConversation: id,\n            mainItemActive: false\n        });\n        // this.props.onConversationChange(id)\n    };\n\n    showDetails = (id) => {\n        console.log(id);\n    };\n\n\n    render() {\n        const messagesList = this.state.conversations[0].messages.map(message =>\n            <Message\n                message={message.inputMessage}\n                id={message.id}\n                key={message.id}\n                handleOver={this.showDetails}\n                isActive={message.id_sender === this.state.userID}/>);\n\n        const groupsCompList =\n            this.state.groups.map(chat =>\n                <ChatGroup\n                    key={chat.id}\n                    id={chat.id}\n                    url={chat.avatar}\n                    onClick={this.groupChanged}\n                    active={chat.id === this.state.activeConversation}/>);\n\n        return (\n            <Page>\n                <Container\n                     style={this.state.isCollapsed ? styleOptCollapsed : styleOptUnCollapsed}>\n                    <GroupsComponent\n                        mainItemActive={this.state.mainItemActive}\n                        openMainItem={this.openMainItem}\n                        list={groupsCompList}/>\n\n                    <ChatComponent\n                        conversationName={this.state.conversations[0].name}\n                        messages={messagesList}\n                        inputMessage={this.state.inputMessage}\n                        onChange={event => this.handleChangeInput(event)}\n                        onKeyPress={this.handleKeyPress}\n                        onClick={() => this.handleSend()}/>\n                    {!this.state.isCollapsed ? <DetailsComponent/> : null}\n                </Container>\n            </Page>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const {activeConversation, groups} = state.chatReducer;\n    // console.log(`state ${state.chatReducer}`);\n    // console.log(state.chatReducer.activeConversation);\n    // console.log(state.chatReducer.groups);\n    return {activeConversation, groups};\n}\n\nexport default MainPage = connect(mapStateToProps)(MainPage);\n"]},"metadata":{},"sourceType":"module"}