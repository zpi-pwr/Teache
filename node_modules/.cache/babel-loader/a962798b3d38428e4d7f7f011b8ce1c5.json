{"ast":null,"code":"import _classCallCheck from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/Metamask.js\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    & .inputField {\\n        width: 16vw;\\n        height: 4vh;\\n        background: transparent;\\n        border: 2px solid grey;\\n        border-radius: 10px;\\n        padding: 1.5vh 1vw 1.5vh 1vw;\\n    }\\n\\n    & #amountField {\\n        margin-left: 1vw;\\n        margin-right: 1vw;\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: lightgreen;\\n\\n    &:hover {\\n        background-color: darkgreen;\\n        border: 2px solid white;\\n    }\\n\\n    margin-left: 2vw;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    background-color: palevioletred;\\n    padding: 0.75rem 1.5rem;\\n    color: white;\\n    border: transparent;\\n    margin-top: 2em;\\n    margin-bottom: 2em;\\n\\n    border-radius: 0.5em;\\n\\n    &:hover {\\n        background-color: darkvioletred;\\n        border: 2px solid white;\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    max-width: 50vw;\\n    max-height: 50vh;\\n    height: auto;\\n    width: auto;\\n    object-fit: contain;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    align-items: center;\\n    text-align: center;\\n    padding: 2vh 1.5vw 2vh 1.5vw;\\n    z-index: 1000;\\n    position: absolute;\\n    background: #ffffff;\\n    left: 50%;\\n    top: 50%;\\n    transform: translateX(-50%) translateY(-50%);\\n    border-radius: 15px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    color: #000000\\n\\n    & > .metamask-title {\\n        font-size: 3vh;\\n    }\\n\\n    & > .metamask-message {\\n        font-size: 1.5vh;\\n    }\\n\\n    & > .metamask-unlock {\\n        font-size: 2vh;\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { getConversationGql } from '../queries/gql';\nimport { graphql } from 'react-apollo';\nimport { apolloClient } from '../apollo';\nvar Text = styled.div(_templateObject());\nvar FormWindow = styled.div(_templateObject2());\nvar MetamaskImage = styled.img(_templateObject3());\nvar BackButton = styled.button(_templateObject4());\nvar SendButton = styled(BackButton)(_templateObject5());\nvar TransferForm = styled.form(_templateObject6());\nexport var InstallMetamask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InstallMetamask, _Component);\n\n  function InstallMetamask() {\n    _classCallCheck(this, InstallMetamask);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InstallMetamask).apply(this, arguments));\n  }\n\n  _createClass(InstallMetamask, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.show) {\n        return null;\n      }\n\n      return React.createElement(FormWindow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"image download-metamask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"metamask-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"You have to install Metamask to use our token system!\"), React.createElement(\"p\", {\n        className: \"metamask-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Click on the image below to install Metamask extension\")), React.createElement(\"a\", {\n        href: \"https://metamask.io/\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(MetamaskImage, {\n        src: \"https://metamask.io/img/metamask.png\",\n        alt: \"Metamask icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(BackButton, {\n        onClick: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"CLOSE\"));\n    }\n  }]);\n\n  return InstallMetamask;\n}(Component);\nInstallMetamask.propTypes = {\n  close: PropTypes.func.isRequired,\n  show: PropTypes.bool\n};\nexport var UnlockMetamask =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(UnlockMetamask, _Component2);\n\n  function UnlockMetamask() {\n    _classCallCheck(this, UnlockMetamask);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UnlockMetamask).apply(this, arguments));\n  }\n\n  _createClass(UnlockMetamask, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.show) {\n        return null;\n      }\n\n      return React.createElement(FormWindow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notification is-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"metamask-unlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Your account is locked! Please unlock your Metamask vault!\")), React.createElement(BackButton, {\n        onClick: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"CLOSE\")));\n    }\n  }]);\n\n  return UnlockMetamask;\n}(Component);\nexport var TokenTransferForm =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TokenTransferForm, _Component3);\n\n  function TokenTransferForm() {\n    var _this;\n\n    _classCallCheck(this, TokenTransferForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TokenTransferForm).call(this));\n\n    _this.handleAmountChange = function (event) {\n      _this.setState({\n        amount: event.target.value\n      });\n    };\n\n    _this.sendTokens = function (targetAddress) {\n      var amount = _this.state.amount;\n      var teacheCoin = _this.props.teacheCoin;\n\n      if (amount <= teacheCoin.balance && amount > 0) {\n        teacheCoin.token.transfer(_this.state.target.address, amount * teacheCoin.decimals, function (error, response) {\n          if (error || error !== null) {\n            console.log(error);\n          } else {\n            _this.closeDialog();\n          }\n        });\n      }\n    };\n\n    _this.closeDialog = function () {\n      _this.setState({\n        loadedUsers: false\n      });\n\n      _this.props.close();\n    };\n\n    _this.state = {\n      amount: 0,\n      target: {\n        name: \"\",\n        address: \"\"\n      },\n      data: null,\n      loadedUsers: false\n    };\n    return _this;\n  }\n\n  _createClass(TokenTransferForm, [{\n    key: \"getConvData\",\n    value: function getConvData() {\n      var _this2 = this;\n\n      if (this.props.show && !this.state.loadedUsers) {\n        var activeConversation = this.props.activeConv;\n        apolloClient.query({\n          query: getConversationGql,\n          variables: {\n            activeConversation: activeConversation\n          }\n        }).then(function (response) {\n          console.log(response);\n          var contributors = response.data.conversation.contributors;\n\n          _this2.setState({\n            data: contributors,\n            loadedUsers: true\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.show) {\n        return null;\n      }\n\n      this.getConvData();\n      return React.createElement(FormWindow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(TransferForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Send to: \")), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Target wallet address: \"), React.createElement(\"input\", {\n        className: \"inputField\",\n        id: \"targetField\",\n        type: \"text\",\n        value: this.state.target.address,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Amount (max. \", this.props.teacheCoin.balance + \" \" + this.props.teacheCoin.symbol, \"): \"), React.createElement(\"input\", {\n        className: \"inputField\",\n        id: \"amountField\",\n        type: \"number\",\n        min: 0,\n        max: this.props.teacheCoin.balance,\n        placeholder: \"Amount to send, example: 100 \" + this.props.teacheCoin.symbol,\n        onChange: this.handleAmountChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }))), React.createElement(BackButton, {\n        onClick: this.closeDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"CLOSE\"), React.createElement(SendButton, {\n        onClick: this.sendTokens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"SEND\"));\n    }\n  }]);\n\n  return TokenTransferForm;\n}(Component);\nTokenTransferForm.propTypes = {\n  teacheCoin: PropTypes.object,\n  activeConv: PropTypes.number,\n  show: PropTypes.bool\n};\nexport default graphql(getConversationGql, {\n  options: function options(props) {\n    return {\n      variables: {\n        activeConv: props.activeConv\n      }\n    };\n  }\n})(TokenTransferForm);","map":{"version":3,"sources":["/home/przemek/Data/Programowanie/PWr/ZPI/Teache/frontend/src/components/Metamask.js"],"names":["React","Component","styled","PropTypes","getConversationGql","graphql","apolloClient","Text","div","FormWindow","MetamaskImage","img","BackButton","button","SendButton","TransferForm","form","InstallMetamask","props","show","close","propTypes","func","isRequired","bool","UnlockMetamask","TokenTransferForm","handleAmountChange","event","setState","amount","target","value","sendTokens","targetAddress","state","teacheCoin","balance","token","transfer","address","decimals","error","response","console","log","closeDialog","loadedUsers","name","data","activeConversation","activeConv","query","variables","then","contributors","conversation","getConvData","symbol","object","number","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nimport { getConversationGql } from '../queries/gql'\nimport { graphql } from 'react-apollo'\nimport { apolloClient } from '../apollo'\n\nconst Text = styled.div`\n    color: #000000\n\n    & > .metamask-title {\n        font-size: 3vh;\n    }\n\n    & > .metamask-message {\n        font-size: 1.5vh;\n    }\n\n    & > .metamask-unlock {\n        font-size: 2vh;\n    }\n`\n\nconst FormWindow = styled.div`\n    align-items: center;\n    text-align: center;\n    padding: 2vh 1.5vw 2vh 1.5vw;\n    z-index: 1000;\n    position: absolute;\n    background: #ffffff;\n    left: 50%;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    border-radius: 15px;\n`\n\nconst MetamaskImage = styled.img`\n    max-width: 50vw;\n    max-height: 50vh;\n    height: auto;\n    width: auto;\n    object-fit: contain;\n`\n\nconst BackButton = styled.button`\n    background-color: palevioletred;\n    padding: 0.75rem 1.5rem;\n    color: white;\n    border: transparent;\n    margin-top: 2em;\n    margin-bottom: 2em;\n\n    border-radius: 0.5em;\n\n    &:hover {\n        background-color: darkvioletred;\n        border: 2px solid white;\n    }\n`\n\nconst SendButton = styled(BackButton)`\n    background-color: lightgreen;\n\n    &:hover {\n        background-color: darkgreen;\n        border: 2px solid white;\n    }\n\n    margin-left: 2vw;\n`\n\nconst TransferForm = styled.form`\n    & .inputField {\n        width: 16vw;\n        height: 4vh;\n        background: transparent;\n        border: 2px solid grey;\n        border-radius: 10px;\n        padding: 1.5vh 1vw 1.5vh 1vw;\n    }\n\n    & #amountField {\n        margin-left: 1vw;\n        margin-right: 1vw;\n    }\n`\n\nexport class InstallMetamask extends Component {\n    render() {\n        if(!this.props.show) {\n            return null\n        }\n\n        return (\n            <FormWindow>\n                <p className=\"image download-metamask\">\n                        <Text>\n                            <p className=\"metamask-title\">You have to install Metamask to use our token system!</p>\n                            <p className=\"metamask-message\">Click on the image below to install Metamask extension</p>\n                        </Text>\n                        <a href=\"https://metamask.io/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                            <MetamaskImage src=\"https://metamask.io/img/metamask.png\" alt=\"Metamask icon\"/>\n                        </a>\n                    </p>\n                    <BackButton onClick={this.props.close}>CLOSE</BackButton>\n            </FormWindow>\n        )\n    }\n}\n\nInstallMetamask.propTypes = {\n    close: PropTypes.func.isRequired,\n    show: PropTypes.bool\n}\n\nexport class UnlockMetamask extends Component {\n    render() {\n        if(!this.props.show) {\n            return null\n        }\n\n        return (\n            <FormWindow>\n                <div className=\"notification is-danger\">\n                    <Text>\n                        <p className=\"metamask-unlock\">Your account is locked! Please unlock your Metamask vault!</p>\n                    </Text>\n                    <BackButton onClick={this.props.close}>CLOSE</BackButton>\n                </div>\n            </FormWindow>\n        )\n    }\n}\n\nexport class TokenTransferForm extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            amount: 0,\n            target: {\n                name: \"\",\n                address: \"\",\n            },\n            data: null,\n            loadedUsers: false\n        }\n    }\n\n    getConvData() {\n        if (this.props.show && !this.state.loadedUsers) {\n            const activeConversation = this.props.activeConv\n            apolloClient.query({\n                query: getConversationGql, \n                variables: {\n                    activeConversation\n                } \n            }).then(response => {\n                console.log(response)\n                const contributors = response.data.conversation.contributors\n\n                this.setState({\n                    data: contributors,\n                    loadedUsers: true\n                })\n            })\n        }\n    }  \n\n    handleAmountChange = (event) => {\n        this.setState({\n            amount: event.target.value\n        })\n    }\n\n    sendTokens = (targetAddress) => {\n        const amount = this.state.amount\n        const teacheCoin = this.props.teacheCoin\n\n        if(amount <= teacheCoin.balance && amount > 0) {\n            teacheCoin.token.transfer(this.state.target.address, amount * teacheCoin.decimals, (error, response) => {\n                if(error || error !== null) {\n                    console.log(error);\n                } else {\n                    this.closeDialog()\n                }\n            })\n        }\n    }\n\n    closeDialog = () => {\n        this.setState({\n            loadedUsers: false\n        })\n        this.props.close()\n    }\n\n    render() {\n        if(!this.props.show) {\n            return null\n        }\n        \n        this.getConvData()\n\n        return (\n            <FormWindow>\n                <TransferForm>\n                    <Text>\n                        <p>Send to: </p>\n                    \n                    </Text>\n                    <Text>\n                        <p>Target wallet address: </p>\n                        <input className=\"inputField\" id=\"targetField\" type=\"text\" value={this.state.target.address} disabled />\n                    </Text>\n                    <Text>\n                        <p>Amount (max. {this.props.teacheCoin.balance + \" \" + this.props.teacheCoin.symbol}): </p>\n                        <input \n                            className=\"inputField\"\n                            id=\"amountField\"\n                            type=\"number\" \n                            min={0} \n                            max={this.props.teacheCoin.balance} \n                            placeholder={\"Amount to send, example: 100 \" + this.props.teacheCoin.symbol}\n                            onChange={this.handleAmountChange} />\n                    </Text>\n                </TransferForm>\n                <BackButton onClick={this.closeDialog}>CLOSE</BackButton>\n                <SendButton onClick={this.sendTokens}>SEND</SendButton>\n            </FormWindow>\n        )\n    }\n}\n\nTokenTransferForm.propTypes = {\n    teacheCoin: PropTypes.object,\n    activeConv: PropTypes.number,\n    show: PropTypes.bool\n}\n\nexport default \n    graphql(getConversationGql, { \n        options: (props) => ({ \n            variables: { \n                activeConv: props.activeConv\n            } \n        })\n    })( TokenTransferForm );"]},"metadata":{},"sourceType":"module"}